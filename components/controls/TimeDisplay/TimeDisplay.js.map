{"version":3,"sources":["../../../src/replay/components/controls/TimeDisplay/TimeDisplay.js"],"names":["className","positionClassName","durationClassName","clockTimeClassName","noDurationClassName","isReasonableDateTime","date","Date","isNaN","getTime","formatAndLimitTime","time","negativeMark","zeroAndBelow","Math","TimeDisplay","position","duration","absolutePosition","playMode","liveDisplayMode","label","positionLabel","durationLabel","clockTimeLabel","classNamePrefix","defaultClassNamePrefix","streamStateKeysForObservation","displayName"],"mappings":";;;;;;;AAEA;;AAEA;;;;;;AAyBA,MAAMA,SAAS,GAAG,cAAlB;AACA,MAAMC,iBAAiB,GAAG,uBAA1B;AACA,MAAMC,iBAAiB,GAAG,uBAA1B;AACA,MAAMC,kBAAkB,GAAG,yBAA3B;AACA,MAAMC,mBAAmB,GAAG,0BAA5B;;AAEA,MAAMC,oBAAoB,GAAGC,IAAI,IAAIA,IAAI,YAAYC,IAAhB,IAAwB,CAACC,KAAK,CAACF,IAAI,CAACG,OAAL,EAAD,CAA9B,IAAkDH,IAAI,CAACG,OAAL,KAAiB,aAAxG;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAgBC,YAAhB,EAAuCC,YAAqB,GAAG,KAA/D,KACzB,wBAAWF,IAAI,IAAI,IAAR,GAAe,CAAf,GAAmBG,IAAI,CAACD,YAAY,GAAG,KAAH,GAAW,KAAxB,CAAJ,CAAmC,CAAnC,EAAsCF,IAAtC,CAA9B,EAA2EC,YAA3E,CADF;;AAGA,MAAMG,WAA4B,GAAG,CAAC;AACpCC,EAAAA,QADoC;AAEpCC,EAAAA,QAFoC;AAGpCC,EAAAA,gBAHoC;AAIpCC,EAAAA,QAJoC;AAKpCC,EAAAA,eAAe,GAAG,YALkB;AAMpCR,EAAAA,YANoC;AAOpCS,EAAAA,KAPoC;AAQpCC,EAAAA,aARoC;AASpCC,EAAAA,aAToC;AAUpCC,EAAAA,cAVoC;AAWpCC,EAAAA,eAAe,GAAGC;AAXkB,CAAD,KAYxB;AACX,MAAIP,QAAQ,KAAK,UAAjB,EAA6B;AAC3B,wBACE;AAAK,MAAA,SAAS,EAAE,8BAAiBM,eAAjB,EAAkCzB,SAAlC,CAAhB;AAA8D,MAAA,KAAK,EAAEqB;AAArE,oBACE;AAAM,MAAA,SAAS,EAAE,8BAAiBI,eAAjB,EAAkCxB,iBAAlC,CAAjB;AAAuE,MAAA,KAAK,EAAEqB;AAA9E,OACGZ,kBAAkB,CAACM,QAAD,EAAWJ,YAAX,CADrB,CADF,eAIE;AAAM,MAAA,SAAS,EAAE,8BAAiBa,eAAjB,EAAkCvB,iBAAlC,CAAjB;AAAuE,MAAA,KAAK,EAAEqB;AAA9E,OACGb,kBAAkB,CAACO,QAAD,EAAWL,YAAX,CADrB,CAJF,CADF;AAUD,GAXD,MAWO;AACL,QAAKQ,eAAe,KAAK,aAApB,IAAqCD,QAAQ,KAAK,SAAnD,IAAiE,CAACd,oBAAoB,CAACa,gBAAD,CAA1F,EAA8G;AAC5G,0BACE;AAAK,QAAA,SAAS,EAAE,8BAAiBO,eAAjB,EAAkCzB,SAAlC,CAAhB;AAA8D,QAAA,KAAK,EAAEqB;AAArE,sBACE;AAAM,QAAA,SAAS,EAAE,8BAAiBI,eAAjB,EAAkCxB,iBAAlC,CAAjB;AAAuE,QAAA,KAAK,EAAEqB;AAA9E,SACGZ,kBAAkB,CAAC,CAACM,QAAQ,IAAIC,QAAZ,IAAwB,CAAzB,KAA+BA,QAAQ,IAAI,CAA3C,CAAD,EAAgDL,YAAhD,EAA8D,IAA9D,CADrB,CADF,EAIGO,QAAQ,KAAK,SAAb,iBACC;AAAM,QAAA,SAAS,EAAE,8BAAiBM,eAAjB,EAAkCvB,iBAAlC,CAAjB;AAAuE,QAAA,KAAK,EAAEqB;AAA9E,SACGb,kBAAkB,CAACO,QAAD,EAAWL,YAAX,CADrB,CALJ,CADF;AAYD,KAbD,MAaO;AACL,0BACE;AAAK,QAAA,SAAS,EAAE,8BAAiBa,eAAjB,EAAkCzB,SAAlC,EAA6CI,mBAA7C,CAAhB;AAAmF,QAAA,KAAK,EAAEiB;AAA1F,sBACE;AAAM,QAAA,SAAS,EAAE,8BAAiBI,eAAjB,EAAkCtB,kBAAlC,CAAjB;AAAwE,QAAA,KAAK,EAAEmB;AAA/E,SACG,6BAAgBJ,gBAAhB,CADH,CADF,CADF;AAOD;AACF;AACF,CAhDD;;AAkDAH,WAAW,CAACY,6BAAZ,GAA4C,CAAC,UAAD,EAAa,UAAb,EAAyB,kBAAzB,EAA6C,UAA7C,CAA5C;AACAZ,WAAW,CAACa,WAAZ,GAA0B,aAA1B;eAEeb,W","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport type { CommonProps } from '../../common';\nimport { defaultClassNamePrefix, formatClockTime, formatTime, prefixClassNames } from '../../common';\nimport type { PlayMode } from '../../player/VideoStreamer/types';\nimport type { ObservingControlStaticProps } from '../../player/PlayerController/ControllerContext';\n\nexport type LiveDisplayMode = 'clock-time' | 'live-offset';\n\ntype Props = CommonProps & {\n  /** ⇘︎ The relative playback position, used for on demand position and timeshift offset display. */\n  position?: number,\n  /** ⇘︎ The duration of the stream, used for on demand position and timeshift offset display. */\n  duration?: number,\n  /** ⇘︎ The clock time, used for live streams and DVR streams when liveDisplayMode is set to 'live-offset'. */\n  absolutePosition?: ?Date,\n  /** ⇘︎ Play mode is used to decide what times to display. */\n  playMode?: PlayMode,\n  /** When set to 'live-offset', DVR times will be displayed as offsets from the live edge. Default is 'clock-time'. */\n  liveDisplayMode?: LiveDisplayMode,\n  negativeMark?: string,\n  positionLabel?: string,\n  durationLabel?: string,\n  clockTimeLabel?: string\n};\n\ntype TimeDisplayType = React.StatelessFunctionalComponent<Props> & ObservingControlStaticProps;\n\nconst className = 'time-display';\nconst positionClassName = 'time-display-position';\nconst durationClassName = 'time-display-duration';\nconst clockTimeClassName = 'time-display-clock-time';\nconst noDurationClassName = 'time-display-no-duration';\n\nconst isReasonableDateTime = date => date instanceof Date && !isNaN(date.getTime()) && date.getTime() > 1514761200000;\n\nconst formatAndLimitTime = (time: ?number, negativeMark?: string, zeroAndBelow: boolean = false) =>\n  formatTime(time == null ? 0 : Math[zeroAndBelow ? 'min' : 'max'](0, time), negativeMark);\n\nconst TimeDisplay: TimeDisplayType = ({\n  position,\n  duration,\n  absolutePosition,\n  playMode,\n  liveDisplayMode = 'clock-time',\n  negativeMark,\n  label,\n  positionLabel,\n  durationLabel,\n  clockTimeLabel,\n  classNamePrefix = defaultClassNamePrefix\n}: Props) => {\n  if (playMode === 'ondemand') {\n    return (\n      <div className={prefixClassNames(classNamePrefix, className)} title={label}>\n        <span className={prefixClassNames(classNamePrefix, positionClassName)} title={positionLabel}>\n          {formatAndLimitTime(position, negativeMark)}\n        </span>\n        <span className={prefixClassNames(classNamePrefix, durationClassName)} title={durationLabel}>\n          {formatAndLimitTime(duration, negativeMark)}\n        </span>\n      </div>\n    );\n  } else {\n    if ((liveDisplayMode === 'live-offset' && playMode === 'livedvr') || !isReasonableDateTime(absolutePosition)) {\n      return (\n        <div className={prefixClassNames(classNamePrefix, className)} title={label}>\n          <span className={prefixClassNames(classNamePrefix, positionClassName)} title={positionLabel}>\n            {formatAndLimitTime((position || duration || 0) - (duration || 0), negativeMark, true)}\n          </span>\n          {playMode === 'livedvr' && (\n            <span className={prefixClassNames(classNamePrefix, durationClassName)} title={durationLabel}>\n              {formatAndLimitTime(duration, negativeMark)}\n            </span>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div className={prefixClassNames(classNamePrefix, className, noDurationClassName)} title={label}>\n          <span className={prefixClassNames(classNamePrefix, clockTimeClassName)} title={positionLabel}>\n            {formatClockTime(absolutePosition)}\n          </span>\n        </div>\n      );\n    }\n  }\n};\n\nTimeDisplay.streamStateKeysForObservation = ['position', 'duration', 'absolutePosition', 'playMode'];\nTimeDisplay.displayName = 'TimeDisplay';\n\nexport default TimeDisplay;\n"],"file":"TimeDisplay.js"}