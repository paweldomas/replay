{"version":3,"sources":["../../../src/replay/components/controls/Volume/Volume.js"],"names":["className","disabledClassName","muteToggleClassName","volumeSliderClassName","volumeSliderHandleClassName","volumeSliderTrackClassName","maxVolume","Volume","React","Component","isMuted","props","setProperties","volume","render","isIos","navigator","userAgent","match","label","volumeSliderLabel","muteToggleLabel","classNamePrefix","mutedContent","unmutedContent","volumeSliderHandleContent","volumeSliderTrackContent","prefixedClassName","handleMuteToggleClick","handleVolumeSliderChange","defaultClassNamePrefix","displayName"],"mappings":";;;;;;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;AAoBA,MAAMA,SAAS,GAAG,QAAlB;AACA,MAAMC,iBAAiB,GAAG,iBAA1B;AACA,MAAMC,mBAAmB,GAAG,aAA5B;AACA,MAAMC,qBAAqB,GAAG,eAA9B;AACA,MAAMC,2BAA2B,GAAG,sBAApC;AACA,MAAMC,0BAA0B,GAAG,qBAAnC;AACA,MAAMC,SAAS,GAAG,CAAlB;;AAEA,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAA4C;AAAA;AAAA;;AAAA,mDAOjBC,OAAD,IAAsB;AAC5C,UAAI,KAAKC,KAAL,CAAWC,aAAf,EAA8B;AAC5B,aAAKD,KAAL,CAAWC,aAAX,CAAyB;AAAEF,UAAAA;AAAF,SAAzB;AACD;AACF,KAXyC;;AAAA,sDAadG,MAAD,IAAoB;AAC7C,YAAMD,aAAa,GAAG,KAAKD,KAAL,CAAWC,aAAjC;;AACA,UAAIA,aAAJ,EAAmB;AACjBA,QAAAA,aAAa,CAAC;AAAEF,UAAAA,OAAO,EAAE,KAAX;AAAkBG,UAAAA;AAAlB,SAAD,CAAb;AACD;AACF,KAlByC;AAAA;;AAoB1CC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAGC,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,qBAA1B,CAAd;AADO,wBAaH,KAAKP,KAbF;AAAA,UAGLE,MAHK,eAGLA,MAHK;AAAA,UAILH,OAJK,eAILA,OAJK;AAAA,UAKLS,KALK,eAKLA,KALK;AAAA,UAMLC,iBANK,eAMLA,iBANK;AAAA,UAOLC,eAPK,eAOLA,eAPK;AAAA,UAQLC,eARK,eAQLA,eARK;AAAA,UASLC,YATK,eASLA,YATK;AAAA,UAULC,cAVK,eAULA,cAVK;AAAA,UAWLC,yBAXK,eAWLA,yBAXK;AAAA,UAYLC,wBAZK,eAYLA,wBAZK;AAcP,UAAMC,iBAAiB,GAAG,8BAAiBL,eAAjB,EAAkCtB,SAAlC,EAA6Ce,KAAK,IAAId,iBAAtD,CAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAE0B,iBAAhB;AAAmC,MAAA,KAAK,EAAER;AAA1C,oBACE,oBAAC,qBAAD;AACE,MAAA,KAAK,EAAEE,eADT;AAEE,MAAA,IAAI,EAAEX,OAFR;AAGE,MAAA,iBAAiB,EAAEc,cAHrB;AAIE,MAAA,gBAAgB,EAAED,YAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKK,qBALjB;AAME,MAAA,eAAe,EAAEN,eANnB;AAOE,MAAA,SAAS,EAAEpB;AAPb,MADF,EAUG,CAACa,KAAD,iBACC,oBAAC,eAAD;AACE,MAAA,KAAK,EAAEK,iBADT;AAEE,MAAA,KAAK,EAAEV,OAAO,GAAG,CAAH,GAAOG,MAFvB;AAGE,MAAA,QAAQ,EAAEP,SAHZ;AAIE,MAAA,aAAa,EAAEmB,yBAJjB;AAKE,MAAA,YAAY,EAAEC,wBALhB;AAME,MAAA,aAAa,EAAE,KAAKG,wBANtB;AAOE,MAAA,eAAe,EAAEP,eAPnB;AAQE,MAAA,SAAS,EAAEnB,qBARb;AASE,MAAA,cAAc,EAAEE,0BATlB;AAUE,MAAA,eAAe,EAAED;AAVnB,MAXJ,CADF;AA2BD;;AA9DyC;;gBAAtCG,M,kBACkB;AACpBe,EAAAA,eAAe,EAAEQ;AADG,C;;gBADlBvB,M,mCAKkE,CAAC,QAAD,EAAW,SAAX,C;;AA4DxEA,MAAM,CAACwB,WAAP,GAAqB,QAArB;eACexB,M","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { defaultClassNamePrefix, prefixClassNames } from '../../common';\nimport type { CommonProps } from '../../common';\nimport ToggleButton from '../../generic/ToggleButton/ToggleButton';\nimport Slider from '../../generic/Slider/Slider';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** ⇘︎ The current volume level, a number between 0 and 1. */\n  volume?: number,\n  /** ⇘︎ The current mute state. false means unmuted. */\n  isMuted?: boolean,\n  volumeSliderLabel?: string,\n  muteToggleLabel?: string,\n  /** Element(s) displayed when isMuted is set to true The convention is to display a disabled or \"silent\" loudspeaker icon. */\n  mutedContent: React.Node,\n  /** Element(s) displayed when isMuted is set to false The convention is to display a loudspeaker icon with sound waves. */\n  unmutedContent: React.Node,\n  volumeSliderHandleContent?: React.Node,\n  volumeSliderTrackContent?: React.Node,\n  /** ⇗ This callback is invoked with { isMuted: true } or { isMuted: false } when the mute button is toggled. If the volume slider handle position is changed, it is invoked with { volume: newLevel } */\n  setProperties?: ({ volume: number } | { isMuted: boolean }) => void\n};\n\nconst className = 'volume';\nconst disabledClassName = 'volume-disabled';\nconst muteToggleClassName = 'mute-toggle';\nconst volumeSliderClassName = 'volume-slider';\nconst volumeSliderHandleClassName = 'volume-slider-handle';\nconst volumeSliderTrackClassName = 'volume-slider-track';\nconst maxVolume = 1;\n\nclass Volume extends React.Component<Props> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  static streamStateKeysForObservation: StreamStateKeysForObservation = ['volume', 'isMuted'];\n\n  handleMuteToggleClick = (isMuted: boolean) => {\n    if (this.props.setProperties) {\n      this.props.setProperties({ isMuted });\n    }\n  };\n\n  handleVolumeSliderChange = (volume: number) => {\n    const setProperties = this.props.setProperties;\n    if (setProperties) {\n      setProperties({ isMuted: false, volume });\n    }\n  };\n\n  render() {\n    const isIos = navigator.userAgent.match(/(iPad|iPhone|iPod)/i);\n    const {\n      volume,\n      isMuted,\n      label,\n      volumeSliderLabel,\n      muteToggleLabel,\n      classNamePrefix,\n      mutedContent,\n      unmutedContent,\n      volumeSliderHandleContent,\n      volumeSliderTrackContent\n    } = this.props;\n    const prefixedClassName = prefixClassNames(classNamePrefix, className, isIos && disabledClassName);\n    return (\n      <div className={prefixedClassName} title={label}>\n        <ToggleButton\n          label={muteToggleLabel}\n          isOn={isMuted}\n          toggledOffContent={unmutedContent}\n          toggledOnContent={mutedContent}\n          onToggle={this.handleMuteToggleClick}\n          classNamePrefix={classNamePrefix}\n          className={muteToggleClassName}\n        />\n        {!isIos && (\n          <Slider\n            label={volumeSliderLabel}\n            value={isMuted ? 0 : volume}\n            maxValue={maxVolume}\n            handleContent={volumeSliderHandleContent}\n            trackContent={volumeSliderTrackContent}\n            onValueChange={this.handleVolumeSliderChange}\n            classNamePrefix={classNamePrefix}\n            className={volumeSliderClassName}\n            trackClassName={volumeSliderTrackClassName}\n            handleClassName={volumeSliderHandleClassName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nVolume.displayName = 'Volume';\nexport default Volume;\n"],"file":"Volume.js"}