{"version":3,"sources":["../../../src/replay/components/generic/Button/Button.js"],"names":["baseClassName","selectClasses","classes","button","Button","React","Component","props","onClick","keyboardEvent","key","preventDefault","handleClick","render","label","className","classNamePrefix","content","classNames","handleKeyDown","handleKeyUp","useDefaultClassNaming"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;AAQA,MAAMA,aAAa,GAAG,QAAtB;;AACA,MAAMC,aAAa,GAAGC,OAAO,IAAIA,OAAO,CAACC,MAAzC;;AAEA,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAA4C;AAAA;AAAA;;AAAA,yCAK5B,MAAM,KAAKC,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWC,OAAX,EALA;;AAAA,2CAO1B,wCAA2B,CAAC,OAAD,EAAU,GAAV,CAA3B,CAP0B;;AAAA,yCAS3BC,aAAD,IAAkC;AAC9C,UAAIA,aAAa,CAACC,GAAd,KAAsB,OAAtB,IAAiCD,aAAa,CAACC,GAAd,KAAsB,GAA3D,EAAgE;AAC9DD,QAAAA,aAAa,CAACE,cAAd;AACA,aAAKC,WAAL;AACD;AACF,KAdyC;AAAA;;AAgB1CC,EAAAA,MAAM,GAAG;AAAA,wBACgE,KAAKN,KADrE;AAAA,UACCO,KADD,eACCA,KADD;AAAA,UACQC,SADR,eACQA,SADR;AAAA,UACmBC,eADnB,eACmBA,eADnB;AAAA,UACoCd,OADpC,eACoCA,OADpC;AAAA,UAC6Ce,OAD7C,eAC6CA,OAD7C;AAEP,UAAMC,UAAU,GAAG,+BAAkB;AACnChB,MAAAA,OADmC;AAEnCD,MAAAA,aAFmC;AAGnCiB,MAAAA,UAAU,EAAE,CAAClB,aAAD,EAAgBe,SAAhB,CAHuB;AAInCC,MAAAA;AAJmC,KAAlB,CAAnB,CAFO,CAOH;;AACJ,wBACE;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,OAAO,EAAE,KAAKF,WAFhB;AAGE,MAAA,SAAS,EAAE,KAAKO,aAHlB;AAIE,MAAA,OAAO,EAAE,KAAKC,WAJhB;AAKE,MAAA,SAAS,EAAEF,UALb;AAME,MAAA,IAAI,EAAC,QANP;AAOE,MAAA,QAAQ,EAAE;AAPZ,oBAQE;AAAK,MAAA,QAAQ,EAAE,CAAC;AAAhB,OAAoBD,OAApB,CARF,CADF;AAYD;;AApCyC;;gBAAtCb,M,kBACkB;AACpBiB,EAAAA,qBAAqB,EAAE;AADH,C;;eAsCTjB,M","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\n\ntype Props = CommonGenericProps & {\n  label?: string,\n  content?: React.Node,\n  onClick?: () => void\n};\n\nconst baseClassName = 'button';\nconst selectClasses = classes => classes.button;\n\nclass Button extends React.Component<Props> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  handleClick = () => this.props.onClick && this.props.onClick();\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const { label, className, classNamePrefix, classes, content }: Props = this.props;\n    const classNames = hydrateClassNames({\n      classes,\n      selectClasses,\n      classNames: [baseClassName, className],\n      classNamePrefix\n    }); // buildClassNames(useDefaultClassNaming, classNamePrefix, className, baseClassName);\n    return (\n      <div\n        title={label}\n        onClick={this.handleClick}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={this.handleKeyUp}\n        className={classNames}\n        role=\"button\"\n        tabIndex={0}>\n        <div tabIndex={-1}>{content}</div>\n      </div>\n    );\n  }\n}\n\nexport default Button;\n"],"file":"Button.js"}