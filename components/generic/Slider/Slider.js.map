{"version":3,"sources":["../../../src/replay/components/generic/Slider/Slider.js"],"names":["baseClassName","isDraggingClassName","wasClickedClassName","baseTrackClassName","baseHandleClassName","zeroStyle","horizontalProp","verticalProp","keyPressValueStep","selectDefaultClasses","classes","slider","selectDraggingClasses","sliderDragging","selectTrackClasses","sliderTrack","selectHandleClasses","sliderHandle","toPercentString","value","maxValue","attempt","Infinity","isNaN","Math","min","toFixed","decreaseKeys","increaseKeys","allCaptureKeys","concat","Slider","React","Component","constructor","props","evt","conditions","renderedTrack","clickCoordinates","isVertical","relativeVerticalValue","height","y","updateValue","relativeHorizontalValue","x","width","relativeValue","isDragging","isEnded","isPreviewing","setState","previewValue","state","dragValue","onDrag","onValueChange","updateValueFromCoordinates","type","stopPropagation","setTimeout","wasClicked","isTouchSupported","document","addEventListener","handleHandleDrag","handleHandleEndDrag","removeEventListener","isPointerInside","keyboardEvent","indexOf","key","max","handle","renderedHandle","track","window","render","children","handleContent","trackContent","classNamePrefix","className","handleClassName","trackClassName","label","isUpdateBlocked","displayValue","selectClasses","sliderClassNames","classNames","handleClassNames","trackClassNames","handleHandleOrTrackClick","handleHandleStartDrag","handleMouseEnter","handleMouseLeave","handleKeyDown","handleKeyUp","setRenderedTrack","Children","map","child","cloneElement","setRenderedHandle"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;AAoCA,MAAMA,aAAa,GAAG,QAAtB;AACA,MAAMC,mBAAmB,GAAG,UAA5B;AACA,MAAMC,mBAAmB,GAAG,SAA5B;AACA,MAAMC,kBAAkB,GAAG,cAA3B;AACA,MAAMC,mBAAmB,GAAG,eAA5B;AACA,MAAMC,SAAS,GAAG,IAAlB;AACA,MAAMC,cAAc,GAAG,MAAvB;AACA,MAAMC,YAAY,GAAG,QAArB;AACA,MAAMC,iBAAiB,GAAG,KAA1B;;AAEA,MAAMC,oBAAoB,GAAGC,OAAO,IAAIA,OAAO,CAACC,MAAhD;;AACA,MAAMC,qBAAqB,GAAGF,OAAO,IAAIA,OAAO,CAACG,cAAR,IAA0BH,OAAO,CAACC,MAA3E;;AACA,MAAMG,kBAAkB,GAAGJ,OAAO,IAAIA,OAAO,CAACK,WAA9C;;AACA,MAAMC,mBAAmB,GAAGN,OAAO,IAAIA,OAAO,CAACO,YAA/C;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAwCC,QAAxC,EAAkE;AAChE,QAAMC,OAAO,GAAGF,KAAK,GAAGC,QAAxB;;AACA,MAAIA,QAAQ,KAAKE,QAAb,IAAyBH,KAAK,KAAKG,QAAnC,IAA+CF,QAAQ,KAAK,CAA5D,IAAiEG,KAAK,CAACF,OAAD,CAAtE,IAAmFA,OAAO,KAAK,CAAnG,EAAsG;AACpG,WAAOhB,SAAP;AACD,GAFD,MAEO;AACL,qBAAU,CAACmB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYJ,OAAZ,IAAuB,GAAxB,EAA6BK,OAA7B,CAAqC,CAArC,CAAV;AACD;AACF;AAED;;;;;;;;;;;;AAWA,MAAMC,YAAY,GAAG,CAAC,MAAD,EAAS,WAAT,EAAsB,MAAtB,EAA8B,WAA9B,CAArB;AACA,MAAMC,YAAY,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,IAAxB,EAA8B,SAA9B,CAArB;AACA,MAAMC,cAAc,GAAGF,YAAY,CAACG,MAAb,CAAoBF,YAApB,CAAvB;;AAEA,MAAMG,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAmD;AAUjDC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;;AADwB;;AAAA;;AAAA;;AAAA,wDAMG,CAC3BC,GAD2B,EAE3BC,UAF2B,KAGxB;AACH,UAAI,KAAKC,aAAT,EAAwB;AACtB,cAAMC,gBAAgB,GAAG,yCAA4BH,GAA5B,EAAiC,KAAKE,aAAtC,CAAzB;;AACA,YAAI,KAAKH,KAAL,CAAWK,UAAf,EAA2B;AACzB,gBAAMC,qBAAqB,GAAG,CAACF,gBAAgB,CAACG,MAAjB,GAA0BH,gBAAgB,CAACI,CAA5C,IAAiDJ,gBAAgB,CAACG,MAAhG;AACA,eAAKE,WAAL,CAAiBH,qBAAjB,EAAwCJ,UAAxC;AACD,SAHD,MAGO;AACL,gBAAMQ,uBAAuB,GAAGN,gBAAgB,CAACO,CAAjB,GAAqBP,gBAAgB,CAACQ,KAAtE;AACA,eAAKH,WAAL,CAAiBC,uBAAjB,EAA0CR,UAA1C;AACD;AACF;AACF,KApByB;;AAAA,yCAsBZ,CAACW,aAAD,EAAwB;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,OAAd;AAAuBC,MAAAA;AAAvB,KAAxB,KAAoF;AAChG,YAAMhC,KAAK,GAAG6B,aAAa,GAAG,KAAKb,KAAL,CAAWf,QAAzC;;AACA,UAAI+B,YAAJ,EAAkB;AAChB,aAAKC,QAAL,CAAc;AACZC,UAAAA,YAAY,EAAElC;AADF,SAAd;AAGD,OAJD,MAIO;AACL,YAAI,KAAKmC,KAAL,CAAWL,UAAf,EAA2B;AACzB,eAAKG,QAAL,CAAc;AACZG,YAAAA,SAAS,EAAEpC,KADC;AAEZkC,YAAAA,YAAY,EAAElC;AAFF,WAAd;;AAIA,cAAI,KAAKgB,KAAL,CAAWqB,MAAf,EAAuB;AACrB,iBAAKrB,KAAL,CAAWqB,MAAX,CAAkBrC,KAAlB;AACD;AACF;;AACD,YAAI,KAAKgB,KAAL,CAAWsB,aAAX,KAA6BP,OAAO,IAAI,EAAE,KAAKI,KAAL,CAAWL,UAAX,IAAyBA,UAA3B,CAAxC,CAAJ,EAAqF;AACnF,eAAKd,KAAL,CAAWsB,aAAX,CAAyBtC,KAAzB;AACD;AACF;AACF,KA1CyB;;AAAA,sDA4CEiB,GAAD,IAA8C;AACvE,WAAKsB,0BAAL,CAAgCtB,GAAhC,EAAqC,EAArC;AACD,KA9CyB;;AAAA,mDAgDDA,GAAD,IAA8C;AACpE,UAAIA,GAAG,CAACuB,IAAJ,KAAa,YAAjB,EAA+B;AAC7BvB,QAAAA,GAAG,CAACwB,eAAJ;AACD;;AACD,UAAI,CAAC,KAAKN,KAAL,CAAWL,UAAhB,EAA4B;AAC1BY,QAAAA,UAAU,CAAC,MAAM,KAAKT,QAAL,CAAc;AAAEU,UAAAA,UAAU,EAAE;AAAd,SAAd,CAAP,EAA6C,IAA7C,CAAV;AACA,aAAKV,QAAL,CAAc;AAAEH,UAAAA,UAAU,EAAE,IAAd;AAAoBa,UAAAA,UAAU,EAAE;AAAhC,SAAd;AACA,aAAKJ,0BAAL,CAAgCtB,GAAhC,EAAqC;AAAEa,UAAAA,UAAU,EAAE;AAAd,SAArC,EAH0B,CAI1B;;AACA,YAAI,KAAKc,gBAAT,EAA2B;AACzBC,UAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKC,gBAA5C;AACAF,UAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsC,KAAKE,mBAA3C;AACAH,UAAAA,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,EAAyC,KAAKE,mBAA9C;AACD,SAJD,MAIO;AACLH,UAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKC,gBAA5C;AACAF,UAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKE,mBAA1C;AACAH,UAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwC,KAAKE,mBAA7C;AACD;AACF;AACF,KAnEyB;;AAAA,8CAqEN/B,GAAD,IAAwE;AACzF,UAAI,KAAKkB,KAAL,CAAWL,UAAf,EAA2B;AACzB,aAAKS,0BAAL,CAAgCtB,GAAhC,EAAqC,EAArC;AACD,OAFD,MAEO;AACL,aAAKsB,0BAAL,CAAgCtB,GAAhC,EAAqC;AAAEe,UAAAA,YAAY,EAAE;AAAhB,SAArC;AACD;AACF,KA3EyB;;AAAA,iDA6EHf,GAAD,IAAwE;AAC5F,UAAI,KAAKkB,KAAL,CAAWL,UAAf,EAA2B;AACzB,aAAKS,0BAAL,CAAgCtB,GAAhC,EAAqC;AAAEa,UAAAA,UAAU,EAAE,IAAd;AAAoBC,UAAAA,OAAO,EAAE;AAA7B,SAArC;AACD;;AACD,UAAI,KAAKa,gBAAT,EAA2B;AACzBC,QAAAA,QAAQ,CAACI,mBAAT,CAA6B,WAA7B,EAA0C,KAAKF,gBAA/C;AACAF,QAAAA,QAAQ,CAACI,mBAAT,CAA6B,UAA7B,EAAyC,KAAKD,mBAA9C;AACAH,QAAAA,QAAQ,CAACI,mBAAT,CAA6B,aAA7B,EAA4C,KAAKD,mBAAjD;AACD,OAJD,MAIO;AACLH,QAAAA,QAAQ,CAACI,mBAAT,CAA6B,WAA7B,EAA0C,KAAKF,gBAA/C;AACAF,QAAAA,QAAQ,CAACI,mBAAT,CAA6B,SAA7B,EAAwC,KAAKD,mBAA7C;AACAH,QAAAA,QAAQ,CAACI,mBAAT,CAA6B,YAA7B,EAA2C,KAAKD,mBAAhD;AACD;;AACD,WAAKf,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KA3FyB;;AAAA,8CA6FP,MAAM;AACvB,WAAKG,QAAL,CAAc;AAAEiB,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,KA/FyB;;AAAA,8CAgGP,MAAM;AACvB,WAAKjB,QAAL,CAAc;AAAEiB,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,KAlGyB;;AAAA,2CAoGV,wCAA2BxC,cAA3B,CApGU;;AAAA,yCAsGXyC,aAAD,IAAkC;AAC9C,UAAI,CAAC/C,KAAK,CAAC,KAAKY,KAAL,CAAWhB,KAAZ,CAAN,IAA4B,CAACI,KAAK,CAAC,KAAKY,KAAL,CAAWf,QAAZ,CAAtC,EAA6D;AAC3D,cAAM4B,aAAa,GAAG,KAAKb,KAAL,CAAWhB,KAAX,GAAmB,KAAKgB,KAAL,CAAWf,QAApD;;AACA,YAAIO,YAAY,CAAC4C,OAAb,CAAqBD,aAAa,CAACE,GAAnC,KAA2C,CAA/C,EAAkD;AAChD,eAAK5B,WAAL,CAAiBpB,IAAI,CAACiD,GAAL,CAAS,CAAT,EAAYzB,aAAa,GAAGxC,iBAA5B,CAAjB,EAAiE,EAAjE;AACD;;AACD,YAAIoB,YAAY,CAAC2C,OAAb,CAAqBD,aAAa,CAACE,GAAnC,KAA2C,CAA/C,EAAkD;AAChD,eAAK5B,WAAL,CAAiBpB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYuB,aAAa,GAAGxC,iBAA5B,CAAjB,EAAiE,EAAjE;AACD;AACF;AACF,KAhHyB;;AAAA,+CAkHLkE,MAAD,IAA6B;AAC/C,WAAKC,cAAL,GAAsBD,MAAtB;AACD,KApHyB;;AAAA,8CAsHNE,KAAD,IAA4B;AAC7C,WAAKtC,aAAL,GAAqBsC,KAArB;AACD,KAxHyB;;AAExB,SAAKb,gBAAL,GAAwB,gBAAgBc,MAAxC;AACA,SAAKvB,KAAL,GAAa,EAAb;AACD;;AAsHDwB,EAAAA,MAAM,GAAG;AAAA,wBAeH,KAAK3C,KAfF;AAAA,UAEL4C,QAFK,eAELA,QAFK;AAAA,UAGLC,aAHK,eAGLA,aAHK;AAAA,UAILC,YAJK,eAILA,YAJK;AAAA,UAKLC,eALK,eAKLA,eALK;AAAA,UAMLC,SANK,eAMLA,SANK;AAAA,UAOLzE,OAPK,eAOLA,OAPK;AAAA,UAQL0E,eARK,eAQLA,eARK;AAAA,UASLC,cATK,eASLA,cATK;AAAA,UAULC,KAVK,eAULA,KAVK;AAAA,UAWL9C,UAXK,eAWLA,UAXK;AAAA,UAYLrB,KAZK,eAYLA,KAZK;AAAA,UAaLC,QAbK,eAaLA,QAbK;AAAA,UAcLmE,eAdK,eAcLA,eAdK;AAAA,wBAgBsE,KAAKjC,KAhB3E;AAAA,UAgBCC,SAhBD,eAgBCA,SAhBD;AAAA,UAgBYF,YAhBZ,eAgBYA,YAhBZ;AAAA,UAgB0BJ,UAhB1B,eAgB0BA,UAhB1B;AAAA,UAgBsCoB,eAhBtC,eAgBsCA,eAhBtC;AAAA,UAgBuDP,UAhBvD,eAgBuDA,UAhBvD;AAiBP,UAAM0B,YAAY,GAAG,CAACvC,UAAU,IAAIsC,eAAf,KAAmChC,SAAS,IAAI,IAAhD,GAAuDA,SAAvD,GAAmEpC,KAAxF;AACA,UAAMsE,aAAa,GAAGxC,UAAU,GAAGrC,qBAAH,GAA2BH,oBAA3D;AACA,UAAMiF,gBAAgB,GAAG,+BAAkB;AACzChF,MAAAA,OADyC;AAEzC+E,MAAAA,aAFyC;AAGzCP,MAAAA,eAHyC;AAIzCS,MAAAA,UAAU,EAAE,CACV3F,aADU,EAEVmF,SAFU,EAGVlC,UAAU,GAAGhD,mBAAH,GAAyB,IAHzB,EAIV6D,UAAU,GAAG5D,mBAAH,GAAyB,IAJzB;AAJ6B,KAAlB,CAAzB;AAWA,UAAM0F,gBAAgB,GAAG,+BAAkB;AACzClF,MAAAA,OADyC;AAEzC+E,MAAAA,aAAa,EAAEzE,mBAF0B;AAGzCkE,MAAAA,eAHyC;AAIzCS,MAAAA,UAAU,EAAE,CAACvF,mBAAD,EAAsBgF,eAAtB;AAJ6B,KAAlB,CAAzB;AAMA,UAAMS,eAAe,GAAG,+BAAkB;AACxCnF,MAAAA,OADwC;AAExC+E,MAAAA,aAAa,EAAE3E,kBAFyB;AAGxCoE,MAAAA,eAHwC;AAIxCS,MAAAA,UAAU,EAAE,CAACxF,kBAAD,EAAqBkF,cAArB;AAJ4B,KAAlB,CAAxB;AAMA,wBACE;AACE,MAAA,OAAO,EAAE,KAAKS,wBADhB;AAEE,MAAA,WAAW,EAAE,KAAKC,qBAFpB;AAGE,MAAA,YAAY,EAAE,KAAKA,qBAHrB;AAIE,MAAA,WAAW,EAAE,KAAK7B,gBAJpB;AAKE,MAAA,UAAU,EAAE,KAAKC,mBALnB;AAME,MAAA,SAAS,EAAE,KAAKA,mBANlB;AAOE,MAAA,WAAW,EAAE,KAAKD,gBAPpB;AAQE,MAAA,YAAY,EAAE,KAAK8B,gBARrB;AASE,MAAA,YAAY,EAAE,KAAKC,gBATrB;AAUE,MAAA,SAAS,EAAE,KAAKC,aAVlB;AAWE,MAAA,OAAO,EAAE,KAAKC,WAXhB;AAYE,MAAA,KAAK,EAAEb,KAZT;AAaE,MAAA,IAAI,EAAC,QAbP;AAcE,uBAAe,CAdjB;AAeE,uBAAelE,QAfjB;AAgBE,uBAAeD,KAhBjB;AAiBE,MAAA,SAAS,EAAEuE,gBAjBb;AAkBE,MAAA,QAAQ,EAAE;AAlBZ,oBAmBE;AAAK,MAAA,SAAS,EAAEG,eAAhB;AAAiC,MAAA,GAAG,EAAE,KAAKO;AAA3C,OACGnB,YADH,CAnBF,EAsBGjD,KAAK,CAACqE,QAAN,CAAeC,GAAf,CAAmBvB,QAAnB,EAA6BwB,KAAK,IACjCvE,KAAK,CAACwE,YAAN,CAAmBD,KAAnB,EAA0B;AAAElD,MAAAA,YAAF;AAAgBJ,MAAAA,UAAhB;AAA4BoB,MAAAA;AAA5B,KAA1B,CADD,CAtBH,eAyBE;AACE,MAAA,SAAS,EAAEuB,gBADb;AAEE,MAAA,KAAK,EAAE;AAAE,SAACpD,UAAU,GAAGjC,YAAH,GAAkBD,cAA7B,GAA8CY,eAAe,CAACsE,YAAD,EAAepE,QAAf;AAA/D,OAFT;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,EAAE,CAAC,CAJb;AAKE,MAAA,GAAG,EAAE,KAAKqF;AALZ,OAMGzB,aANH,CAzBF,CADF;AAoCD;;AAlNgD;;gBAA7CjD,M,kBACkB;AACpBZ,EAAAA,KAAK,EAAE,CADa;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,C;;eAoNTW,M;AAEf;;;;;;AAMA","sourcesContent":["// @flow\nimport * as React from 'react';\nimport {\n  type CommonGenericProps,\n  getBoundingEventCoordinates,\n  getKeyboardShortcutBlocker,\n  hydrateClassNames\n} from '../../common';\n\ntype Props = CommonGenericProps & {\n  value: number,\n  maxValue: number,\n  isUpdateBlocked?: boolean,\n  isVertical?: boolean,\n  children?: React.Node,\n  handleContent?: React.Node,\n  handleClassName?: string,\n  trackContent?: React.Node,\n  trackClassName?: string,\n  label?: string,\n  onValueChange?: number => void,\n  onDrag?: number => void\n};\n\ntype State = {\n  dragValue?: number,\n  isDragging?: boolean,\n  wasClicked?: boolean,\n  previewValue?: number,\n  isPointerInside?: boolean\n};\n\ntype UpdateConditions = {\n  isDragging?: boolean,\n  isEnded?: boolean,\n  isPreviewing?: boolean\n};\n\nconst baseClassName = 'slider';\nconst isDraggingClassName = 'dragging';\nconst wasClickedClassName = 'clicked';\nconst baseTrackClassName = 'slider-track';\nconst baseHandleClassName = 'slider-handle';\nconst zeroStyle = '0%';\nconst horizontalProp = 'left';\nconst verticalProp = 'bottom';\nconst keyPressValueStep = 0.025;\n\nconst selectDefaultClasses = classes => classes.slider;\nconst selectDraggingClasses = classes => classes.sliderDragging || classes.slider;\nconst selectTrackClasses = classes => classes.sliderTrack;\nconst selectHandleClasses = classes => classes.sliderHandle;\n\nfunction toPercentString(value: number, maxValue: number): string {\n  const attempt = value / maxValue;\n  if (maxValue === Infinity || value === Infinity || maxValue === 0 || isNaN(attempt) || attempt === 0) {\n    return zeroStyle;\n  } else {\n    return `${(Math.min(1, attempt) * 100).toFixed(3)}%`;\n  }\n}\n\n/*\n\nThe styling of the slider needs to follow some rules in order to get sensible responses from user interactions:\n\n* The draggable or clickable area will be the size of the track element (remember how margin, borders, padding, box-sizing, etc. affects the size).\n* The handle positioning (between 0 and 100 percent from left or bottom) should align with the track size and placement.\n* The styling needs to take into account the size of the handle itself. The component will not subtract the size of the component in its positioning and value calculations.\n* The handle should ideally be shifted half its width to the left for horizontal sliders, or half its height down for vertical sliders. It is the center coordinate that should count.\n\n */\n\nconst decreaseKeys = ['Left', 'ArrowLeft', 'Down', 'ArrowDown'];\nconst increaseKeys = ['Right', 'ArrowRight', 'Up', 'ArrowUp'];\nconst allCaptureKeys = decreaseKeys.concat(increaseKeys);\n\nclass Slider extends React.Component<Props, State> {\n  static defaultProps = {\n    value: 0,\n    maxValue: 1\n  };\n\n  renderedHandle: ?HTMLDivElement;\n  renderedTrack: ?HTMLDivElement;\n  isTouchSupported: boolean;\n\n  constructor(props: Props) {\n    super(props);\n    this.isTouchSupported = 'ontouchend' in window;\n    this.state = {};\n  }\n\n  updateValueFromCoordinates = (\n    evt: SyntheticMouseEvent<HTMLDivElement> | MouseEvent | TouchEvent,\n    conditions: UpdateConditions\n  ) => {\n    if (this.renderedTrack) {\n      const clickCoordinates = getBoundingEventCoordinates(evt, this.renderedTrack);\n      if (this.props.isVertical) {\n        const relativeVerticalValue = (clickCoordinates.height - clickCoordinates.y) / clickCoordinates.height;\n        this.updateValue(relativeVerticalValue, conditions);\n      } else {\n        const relativeHorizontalValue = clickCoordinates.x / clickCoordinates.width;\n        this.updateValue(relativeHorizontalValue, conditions);\n      }\n    }\n  };\n\n  updateValue = (relativeValue: number, { isDragging, isEnded, isPreviewing }: UpdateConditions) => {\n    const value = relativeValue * this.props.maxValue;\n    if (isPreviewing) {\n      this.setState({\n        previewValue: value\n      });\n    } else {\n      if (this.state.isDragging) {\n        this.setState({\n          dragValue: value,\n          previewValue: value\n        });\n        if (this.props.onDrag) {\n          this.props.onDrag(value);\n        }\n      }\n      if (this.props.onValueChange && (isEnded || !(this.state.isDragging || isDragging))) {\n        this.props.onValueChange(value);\n      }\n    }\n  };\n\n  handleHandleOrTrackClick = (evt: SyntheticMouseEvent<HTMLDivElement>) => {\n    this.updateValueFromCoordinates(evt, {});\n  };\n\n  handleHandleStartDrag = (evt: SyntheticMouseEvent<HTMLDivElement>) => {\n    if (evt.type !== 'touchstart') {\n      evt.stopPropagation();\n    }\n    if (!this.state.isDragging) {\n      setTimeout(() => this.setState({ wasClicked: false }), 1000);\n      this.setState({ isDragging: true, wasClicked: true });\n      this.updateValueFromCoordinates(evt, { isDragging: true });\n      // We are OK with no position updates yet.\n      if (this.isTouchSupported) {\n        document.addEventListener('touchmove', this.handleHandleDrag);\n        document.addEventListener('touchend', this.handleHandleEndDrag);\n        document.addEventListener('touchcancel', this.handleHandleEndDrag);\n      } else {\n        document.addEventListener('mousemove', this.handleHandleDrag);\n        document.addEventListener('mouseup', this.handleHandleEndDrag);\n        document.addEventListener('mouseleave', this.handleHandleEndDrag);\n      }\n    }\n  };\n\n  handleHandleDrag = (evt: SyntheticMouseEvent<HTMLDivElement> | MouseEvent | TouchEvent) => {\n    if (this.state.isDragging) {\n      this.updateValueFromCoordinates(evt, {});\n    } else {\n      this.updateValueFromCoordinates(evt, { isPreviewing: true });\n    }\n  };\n\n  handleHandleEndDrag = (evt: SyntheticMouseEvent<HTMLDivElement> | MouseEvent | TouchEvent) => {\n    if (this.state.isDragging) {\n      this.updateValueFromCoordinates(evt, { isDragging: true, isEnded: true });\n    }\n    if (this.isTouchSupported) {\n      document.removeEventListener('touchmove', this.handleHandleDrag);\n      document.removeEventListener('touchend', this.handleHandleEndDrag);\n      document.removeEventListener('touchcancel', this.handleHandleEndDrag);\n    } else {\n      document.removeEventListener('mousemove', this.handleHandleDrag);\n      document.removeEventListener('mouseup', this.handleHandleEndDrag);\n      document.removeEventListener('mouseleave', this.handleHandleEndDrag);\n    }\n    this.setState({ isDragging: false });\n  };\n\n  handleMouseEnter = () => {\n    this.setState({ isPointerInside: true });\n  };\n  handleMouseLeave = () => {\n    this.setState({ isPointerInside: false });\n  };\n\n  handleKeyDown = getKeyboardShortcutBlocker(allCaptureKeys);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (!isNaN(this.props.value) && !isNaN(this.props.maxValue)) {\n      const relativeValue = this.props.value / this.props.maxValue;\n      if (decreaseKeys.indexOf(keyboardEvent.key) >= 0) {\n        this.updateValue(Math.max(0, relativeValue - keyPressValueStep), {});\n      }\n      if (increaseKeys.indexOf(keyboardEvent.key) >= 0) {\n        this.updateValue(Math.min(1, relativeValue + keyPressValueStep), {});\n      }\n    }\n  };\n\n  setRenderedHandle = (handle: ?HTMLDivElement) => {\n    this.renderedHandle = handle;\n  };\n\n  setRenderedTrack = (track: ?HTMLDivElement) => {\n    this.renderedTrack = track;\n  };\n\n  render() {\n    const {\n      children,\n      handleContent,\n      trackContent,\n      classNamePrefix,\n      className,\n      classes,\n      handleClassName,\n      trackClassName,\n      label,\n      isVertical,\n      value,\n      maxValue,\n      isUpdateBlocked\n    } = this.props;\n    const { dragValue, previewValue, isDragging, isPointerInside, wasClicked } = this.state;\n    const displayValue = (isDragging || isUpdateBlocked) && dragValue != null ? dragValue : value;\n    const selectClasses = isDragging ? selectDraggingClasses : selectDefaultClasses;\n    const sliderClassNames = hydrateClassNames({\n      classes,\n      selectClasses,\n      classNamePrefix,\n      classNames: [\n        baseClassName,\n        className,\n        isDragging ? isDraggingClassName : null,\n        wasClicked ? wasClickedClassName : null\n      ]\n    });\n    const handleClassNames = hydrateClassNames({\n      classes,\n      selectClasses: selectHandleClasses,\n      classNamePrefix,\n      classNames: [baseHandleClassName, handleClassName]\n    });\n    const trackClassNames = hydrateClassNames({\n      classes,\n      selectClasses: selectTrackClasses,\n      classNamePrefix,\n      classNames: [baseTrackClassName, trackClassName]\n    });\n    return (\n      <div\n        onClick={this.handleHandleOrTrackClick}\n        onMouseDown={this.handleHandleStartDrag}\n        onTouchStart={this.handleHandleStartDrag}\n        onTouchMove={this.handleHandleDrag}\n        onTouchEnd={this.handleHandleEndDrag}\n        onMouseUp={this.handleHandleEndDrag}\n        onMouseMove={this.handleHandleDrag}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={this.handleKeyUp}\n        title={label}\n        role=\"slider\"\n        aria-valuemin={0}\n        aria-valuemax={maxValue}\n        aria-valuenow={value}\n        className={sliderClassNames}\n        tabIndex={0}>\n        <div className={trackClassNames} ref={this.setRenderedTrack}>\n          {trackContent}\n        </div>\n        {React.Children.map(children, child =>\n          React.cloneElement(child, { previewValue, isDragging, isPointerInside })\n        )}\n        <div\n          className={handleClassNames}\n          style={{ [isVertical ? verticalProp : horizontalProp]: toPercentString(displayValue, maxValue) }}\n          role=\"button\"\n          tabIndex={-1}\n          ref={this.setRenderedHandle}>\n          {handleContent}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n\n/*\n\nConsider moving all events to track or slider itself. Or moving track on top of children!\n\n */\n\n/* Assumptions\n\nClickable area = track length OR is it slider length?\nIf track length - should we assume that it aligns with possible handle min/max positions?\n\n*/\n"],"file":"Slider.js"}