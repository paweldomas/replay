{"version":3,"sources":["../../../../src/replay/components/player/VideoStreamer/BasicVideoStreamer/streamRangeHelper.js"],"names":["dawnOfTime","Date","minimumDvrLength","defaultLiveEdgeMargin","dvrStartCorrection","getSeekableNetRange","videoElement","seekable","length","end","start","getPosition","currentTime","getDuration","isLive","seekableRange","duration","getStartOffset","resolvePlayMode","Infinity","getAbsolutePositions","position","startDate","getStartDate","isNaN","absolutePosition","absoluteStartPosition","getTime","getStreamRangeHelper","configuration","liveMargin","liveEdgeMargin","calculateNewState","playMode","isAtLiveEdge","adjustForDvrStartOffset","paused","seekableStart","setPosition","newPosition","gotoLive"],"mappings":"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","sourcesContent":["// @flow\nimport type { PlayMode } from '../types';\nimport type { StreamRangeHelper } from '../common/types';\n\nconst dawnOfTime = new Date(0);\nconst minimumDvrLength = 100; // seconds\nconst defaultLiveEdgeMargin = 10; // seconds\nconst dvrStartCorrection = 10; // yep, seconds\n\nfunction getSeekableNetRange(videoElement: HTMLVideoElement): number {\n  return videoElement.seekable.length > 0 ? videoElement.seekable.end(0) - videoElement.seekable.start(0) : 0;\n}\n\nfunction getPosition(videoElement: HTMLVideoElement): number {\n  return videoElement.currentTime - (videoElement.seekable.length > 0 ? videoElement.seekable.start(0) : 0);\n}\n\nfunction getDuration(videoElement: HTMLVideoElement, isLive: boolean, seekableRange: number): number {\n  return isLive ? seekableRange : videoElement.duration;\n}\n\nfunction getStartOffset(videoElement: HTMLVideoElement) {\n  return videoElement.seekable.length > 0 ? videoElement.seekable.start(0) : 0;\n}\n\nfunction resolvePlayMode(videoElement: HTMLVideoElement, seekableRange: number, isLive: boolean): PlayMode {\n  if (isLive) {\n    if (seekableRange === Infinity || seekableRange === 0 || seekableRange < minimumDvrLength) {\n      return 'live';\n    } else {\n      return 'livedvr';\n    }\n  } else {\n    return 'ondemand';\n  }\n}\n\nfunction getAbsolutePositions(\n  videoElement: HTMLVideoElement,\n  isLive: boolean,\n  position: number\n): { absolutePosition: Date, absoluteStartPosition: Date } {\n  if (isLive) {\n    // $FlowFixMe getStartDate() is Safari only and not part of the DOM standard API.\n    const startDate: Date = videoElement.getStartDate && videoElement.getStartDate();\n    if (isNaN(startDate)) {\n      const absolutePosition = new Date();\n      const absoluteStartPosition = new Date(absolutePosition.getTime() - position * 1000);\n      return {\n        absolutePosition,\n        absoluteStartPosition\n      };\n    } else {\n      return {\n        absolutePosition: new Date(startDate.getTime() + videoElement.currentTime * 1000),\n        absoluteStartPosition: new Date(startDate.getTime() + getStartOffset(videoElement) * 1000)\n      };\n    }\n  } else {\n    return {\n      absolutePosition: dawnOfTime,\n      absoluteStartPosition: dawnOfTime\n    };\n  }\n}\n\nconst getStreamRangeHelper = (\n  videoElement: HTMLVideoElement,\n  configuration: ?{ liveEdgeMargin: ?number }\n): StreamRangeHelper => {\n  const liveMargin = (configuration && configuration.liveEdgeMargin) || defaultLiveEdgeMargin;\n\n  function calculateNewState() {\n    const seekableRange = getSeekableNetRange(videoElement);\n    const isLive = videoElement.duration === Infinity;\n\n    const position = getPosition(videoElement);\n    const duration = getDuration(videoElement, isLive, seekableRange);\n    const playMode = resolvePlayMode(videoElement, seekableRange, isLive);\n    const isAtLiveEdge = isLive && position > duration - liveMargin;\n    const { absolutePosition, absoluteStartPosition } = getAbsolutePositions(videoElement, isLive, position);\n    return {\n      position,\n      duration,\n      playMode,\n      isAtLiveEdge,\n      absolutePosition,\n      absoluteStartPosition\n    };\n  }\n\n  function adjustForDvrStartOffset() {\n    if (videoElement && videoElement.paused && videoElement.duration === Infinity) {\n      const seekableStart = getStartOffset(videoElement);\n      if (seekableStart !== Infinity && seekableStart >= videoElement.currentTime) {\n        videoElement.currentTime = seekableStart + dvrStartCorrection;\n      }\n    }\n  }\n\n  function setPosition(newPosition: number) {\n    if (!(isNaN(newPosition) && newPosition === Infinity)) {\n      videoElement.currentTime = getStartOffset(videoElement) + newPosition;\n    }\n  }\n\n  function gotoLive() {\n    if (videoElement.duration === Infinity && videoElement.seekable.length > 0) {\n      videoElement.currentTime = videoElement.seekable.end(0);\n    }\n  }\n\n  return {\n    adjustForDvrStartOffset,\n    calculateNewState,\n    setPosition,\n    gotoLive\n  };\n};\n\nexport default getStreamRangeHelper;\n"],"file":"streamRangeHelper.js"}