{"version":3,"sources":["../../../../../src/replay/components/player/VideoStreamer/CompoundVideoStreamer/hlsjs-shaka-html/lazyVideoStreamerSelector.js"],"names":["HlsjsVideoStreamer","ShakaVideoStreamer","HtmlVideoStreamer","BasicVideoStreamer","selectVideoStreamerImporter","source","userAgent","contentType","streamUrl","streamType","name"],"mappings":";;;;;;;AAEA;;AAEA;;;;;;AAEA,MAAMA,kBAAkB,GAAG,iBAAK,mEAAa,6CAAb,GAAL,CAA3B;AACA,MAAMC,kBAAkB,GAAG,iBAAK,mEAAa,6CAAb,GAAL,CAA3B;AACA,MAAMC,iBAAiB,GAAG,iBAAK,mEAAa,2CAAb,GAAL,CAA1B;AACA,MAAMC,kBAAkB,GAAG,iBAAK,mEAAa,6CAAb,GAAL,CAA3B;;AAEA,MAAMC,2BAAsD,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;AACpF,MAAID,MAAJ,EAAY;AACV,UAAME,WAAW,GAAG,OAAOF,MAAP,KAAkB,QAAlB,GAA6B,IAA7B,GAAoCA,MAAM,CAACE,WAA/D;AACA,UAAMC,SAAS,GAAG,OAAOH,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCA,MAAM,CAACG,SAA/D;AACA,UAAMC,UAAU,GAAG,+BAAiBD,SAAjB,EAA4BD,WAA5B,CAAnB;;AACA,YAAQE,UAAU,CAACC,IAAnB;AACE,WAAK,KAAL;AACE,YAAI,uBAASJ,SAAT,CAAJ,EAAyB;AACvB,iBAAOJ,iBAAP;AACD,SAFD,MAEO;AACL,iBAAOF,kBAAP;AACD;;AACH,WAAK,MAAL;AACE,eAAOC,kBAAP;;AACF;AACE,eAAOE,kBAAP;AAVJ;AAYD,GAhBD,MAgBO;AACL,WAAO,MAAMA,kBAAb;AACD;AACF,CApBD;;eAsBeC,2B","sourcesContent":["// @flow\n//$FlowFixMe Flow React types are not up to date.\nimport { lazy } from 'react';\nimport type { LazyVideoStreamerSelector } from '../CompoundVideoStreamer';\nimport { detectStreamType, isSafari } from '../helpers';\n\nconst HlsjsVideoStreamer = lazy(() => import('../../HlsjsVideoStreamer/HlsjsVideoStreamer'));\nconst ShakaVideoStreamer = lazy(() => import('../../ShakaVideoStreamer/ShakaVideoStreamer'));\nconst HtmlVideoStreamer = lazy(() => import('../../HtmlVideoStreamer/HtmlVideoStreamer'));\nconst BasicVideoStreamer = lazy(() => import('../../BasicVideoStreamer/BasicVideoStreamer'));\n\nconst selectVideoStreamerImporter: LazyVideoStreamerSelector = (source, userAgent) => {\n  if (source) {\n    const contentType = typeof source === 'string' ? null : source.contentType;\n    const streamUrl = typeof source === 'string' ? source : source.streamUrl;\n    const streamType = detectStreamType(streamUrl, contentType);\n    switch (streamType.name) {\n      case 'hls':\n        if (isSafari(userAgent)) {\n          return HtmlVideoStreamer;\n        } else {\n          return HlsjsVideoStreamer;\n        }\n      case 'dash':\n        return ShakaVideoStreamer;\n      default:\n        return BasicVideoStreamer;\n    }\n  } else {\n    return () => BasicVideoStreamer;\n  }\n};\n\nexport default selectVideoStreamerImporter;\n"],"file":"lazyVideoStreamerSelector.js"}