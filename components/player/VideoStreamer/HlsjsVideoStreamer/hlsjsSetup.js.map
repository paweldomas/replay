{"version":3,"sources":["../../../../src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/hlsjsSetup.js"],"names":["broadcastHlsInstance","instanceKeeper","preposition","hls","subscribers","forEach","subscriber","debugEnabledLogLevels","hlsjsSetup","videoElement","normalizedSource","configuration","Promise","resolve","reject","Hls","isSupported","customConfiguration","hlsjs","hlsConfig","autoStartLoad","debug","indexOf","logLevel","licenseUrl","widevineLicenseUrl","emeEnabled","drmDetails","licenseAcquisitionDetails","robustness","audio","video","drmSystemOptions","audioRobustness","videoRobustness","on","Events","MEDIA_ATTACHED","attachMedia","PlaybackError","hlsjsCleanup","stopLoad","destroy"],"mappings":";;;;;;;;;AACA;;AAGA;;;;;;;;;;AAEO,SAASA,oBAAT,CAA8BC,cAA9B,EAAmEC,WAAnE,EAA8F;AAAA,QAC3FC,GAD2F,GACnFF,cADmF,CAC3FE,GAD2F;AAEnGA,EAAAA,GAAG,IAAIF,cAAc,CAACG,WAAf,CAA2BC,OAA3B,CAAmCC,UAAU,IAAIA,UAAU,CAACH,GAAD,EAAMD,WAAN,CAA3D,CAAP;AACD;;AAED,MAAMK,qBAAqB,GAAG,CAAC,OAAD,EAAU,SAAV,EAAqB,MAArB,CAA9B;;AAEO,SAASC,UAAT,CACLC,YADK,EAELC,gBAFK,EAGLC,aAHK,EAIS;AACd,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIC,aAAIC,WAAJ,EAAJ,EAAuB;AACrB,YAAMC,mBAAmB,GAAGN,aAAa,IAAIA,aAAa,CAACO,KAA/B,IAAwCP,aAAa,CAACO,KAAd,CAAoBD,mBAAxF;;AACA,YAAME,SAAc;AAClBC,QAAAA,aAAa,EAAE,KADG;AAElBC,QAAAA,KAAK,EAAEV,aAAa,IAAIJ,qBAAqB,CAACe,OAAtB,CAA8BX,aAAa,CAACY,QAA5C,KAAyD;AAF/D,SAGfN,mBAHe,CAApB;;AAMA,YAAMO,UAAU,GAAGd,gBAAgB,IAAIA,gBAAgB,CAACc,UAAxD;;AACA,UAAIA,UAAJ,EAAgB;AACdL,QAAAA,SAAS,CAACM,kBAAV,GAA+BD,UAA/B;AACAL,QAAAA,SAAS,CAACO,UAAV,GAAuB,IAAvB;AACA,cAAMC,UAAU,GAAGjB,gBAAgB,IAAIA,gBAAgB,CAACkB,yBAAxD;;AACA,YAAID,UAAU,IAAIA,UAAU,CAACE,UAAzB,IAAuCF,UAAU,CAACE,UAAX,CAAsB,oBAAtB,CAA3C,EAAwF;AAAA,wCAC7DF,UAAU,CAACE,UAAX,CAAsB,oBAAtB,CAD6D;AAAA,gBAC9EC,KAD8E,yBAC9EA,KAD8E;AAAA,gBACvEC,KADuE,yBACvEA,KADuE;AAEtFZ,UAAAA,SAAS,CAACa,gBAAV,GAA6B;AAC3BC,YAAAA,eAAe,EAAEH,KADU;AAE3BI,YAAAA,eAAe,EAAEH;AAFU,WAA7B;AAID;AACF;;AAED,YAAM5B,GAAG,GAAG,IAAIY,YAAJ,CAAQI,SAAR,CAAZ;AACAhB,MAAAA,GAAG,CAACgC,EAAJ,CAAOpB,aAAIqB,MAAJ,CAAWC,cAAlB,EAAkC,MAAM;AACtCxB,QAAAA,OAAO,CAACV,GAAD,CAAP;AACD,OAFD;AAGAA,MAAAA,GAAG,CAACmC,WAAJ,CAAgB7B,YAAhB;AACD,KA3BD,MA2BO;AACLK,MAAAA,MAAM,CACJ,IAAIyB,oBAAJ,CAAkB,qCAAlB,EAAyD,OAAzD,EAAkE,0CAAlE,CADI,CAAN;AAGD;AACF,GAjCM,CAAP;AAkCD;;AAEM,SAASC,YAAT,CAAsBvC,cAAtB,EAA2D;AAAA,QACxDE,GADwD,GAChDF,cADgD,CACxDE,GADwD;;AAEhE,MAAIA,GAAJ,EAAS;AACPA,IAAAA,GAAG,CAACsC,QAAJ;AACAzC,IAAAA,oBAAoB,CAACC,cAAD,EAAiB,KAAjB,CAApB;AACA,WAAOW,OAAO,CAACC,OAAR,CAAgBV,GAAG,CAACuC,OAAJ,EAAhB,CAAP;AACD,GAJD,MAIO;AACL,WAAO9B,OAAO,CAACC,OAAR,EAAP;AACD;AACF","sourcesContent":["// @flow\nimport Hls from 'hls.js';\nimport type { HlsjsInstanceKeeper, HlsjsVideoStreamerConfiguration } from './HlsjsVideoStreamer';\nimport type { AdvancedPlaybackSource } from '../types';\nimport { PlaybackError } from '../types';\n\nexport function broadcastHlsInstance(instanceKeeper: HlsjsInstanceKeeper, preposition: 'on' | 'off') {\n  const { hls } = instanceKeeper;\n  hls && instanceKeeper.subscribers.forEach(subscriber => subscriber(hls, preposition));\n}\n\nconst debugEnabledLogLevels = ['DEBUG', 'VERBOSE', 'INFO'];\n\nexport function hlsjsSetup(\n  videoElement: HTMLVideoElement,\n  normalizedSource: ?AdvancedPlaybackSource,\n  configuration: ?HlsjsVideoStreamerConfiguration\n): Promise<Hls> {\n  return new Promise((resolve, reject) => {\n    if (Hls.isSupported()) {\n      const customConfiguration = configuration && configuration.hlsjs && configuration.hlsjs.customConfiguration;\n      const hlsConfig: any = {\n        autoStartLoad: false,\n        debug: configuration && debugEnabledLogLevels.indexOf(configuration.logLevel) >= 0,\n        ...customConfiguration\n      };\n\n      const licenseUrl = normalizedSource && normalizedSource.licenseUrl;\n      if (licenseUrl) {\n        hlsConfig.widevineLicenseUrl = licenseUrl;\n        hlsConfig.emeEnabled = true;\n        const drmDetails = normalizedSource && normalizedSource.licenseAcquisitionDetails;\n        if (drmDetails && drmDetails.robustness && drmDetails.robustness['com.widevine.alpha']) {\n          const { audio, video } = drmDetails.robustness['com.widevine.alpha'];\n          hlsConfig.drmSystemOptions = {\n            audioRobustness: audio,\n            videoRobustness: video\n          };\n        }\n      }\n\n      const hls = new Hls(hlsConfig);\n      hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n        resolve(hls);\n      });\n      hls.attachMedia(videoElement);\n    } else {\n      reject(\n        new PlaybackError('STREAM_ERROR_TECHNOLOGY_UNSUPPORTED', 'hlsjs', 'Hls.js is not supported in this browser.')\n      );\n    }\n  });\n}\n\nexport function hlsjsCleanup(instanceKeeper: HlsjsInstanceKeeper) {\n  const { hls } = instanceKeeper;\n  if (hls) {\n    hls.stopLoad();\n    broadcastHlsInstance(instanceKeeper, 'off');\n    return Promise.resolve(hls.destroy());\n  } else {\n    return Promise.resolve();\n  }\n}\n"],"file":"hlsjsSetup.js"}