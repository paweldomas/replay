{"version":3,"sources":["../../../../src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/hlsjsSourceChangeHandler.js"],"names":["getSourceChangeHandler","instanceKeeper","nextProps","prevProps","videoElement","source","configuration","then","hls","Promise","resolve","reject","onMediaLoaded","off","Hls","Events","MANIFEST_PARSED","startPosition","startLoad","e","PlaybackError","on","loadSource","streamUrl"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AAEA;;;;AAOA,MAAMA,sBAAsB,GAAIC,cAAD,IAAyC,CAItEC,SAJsE,EAKtEC,SALsE,KAMrD;AAAA,QACTC,YADS,GACQH,cADR,CACTG,YADS;AAEjB,gCAAaH,cAAb;AACA,QAAMI,MAAM,GAAG,+BAAgBH,SAAS,CAACG,MAA1B,CAAf;;AACA,MAAIA,MAAJ,EAAY;AACV,WAAO,4BAAWD,YAAX,EAAyBF,SAAS,CAACI,aAAnC,EAAkDC,IAAlD,CAAuDC,GAAG,IAAI;AACnEP,MAAAA,cAAc,CAACO,GAAf,GAAqBA,GAArB,CADmE,CAEnE;;AACA,4CAAqBP,cAArB,EAAqC,IAArC;AACA,aAAO,IAAIQ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,cAAMC,aAAa,GAAG,MAAM;AAC1BJ,UAAAA,GAAG,CAACK,GAAJ,CAAQC,aAAIC,MAAJ,CAAWC,eAAnB,EAAoCJ,aAApC;;AACA,cAAI;AACF,gBAAIP,MAAM,CAACY,aAAX,EAA0B;AACxBT,cAAAA,GAAG,CAACU,SAAJ,CAAcb,MAAM,CAACY,aAArB;AACD,aAFD,MAEO;AACLT,cAAAA,GAAG,CAACU,SAAJ;AACD;;AACDR,YAAAA,OAAO;AACR,WAPD,CAOE,OAAOS,CAAP,EAAU;AACVR,YAAAA,MAAM,CAAC,IAAIS,oBAAJ,CAAkB,cAAlB,EAAkC,OAAlC,EAA2C,2BAA3C,EAAwE,OAAxE,EAAiFD,CAAjF,CAAD,CAAN;AACD;AACF,SAZD;;AAaA,YAAI;AACFX,UAAAA,GAAG,CAACa,EAAJ,CAAOP,aAAIC,MAAJ,CAAWC,eAAlB,EAAmCJ,aAAnC;AACAJ,UAAAA,GAAG,CAACc,UAAJ,CAAejB,MAAM,CAACkB,SAAtB;AACD,SAHD,CAGE,OAAOJ,CAAP,EAAU;AACVR,UAAAA,MAAM,CAAC,IAAIS,oBAAJ,CAAkB,cAAlB,EAAkC,OAAlC,EAA2C,qBAA3C,EAAkE,OAAlE,EAA2ED,CAA3E,CAAD,CAAN;AACD;AACF,OApBM,CAAP;AAqBD,KAzBM,CAAP;AA0BD;AAAC;;;;AA3BF,OA8BS;AACP,aAAOV,OAAO,CAACC,OAAR,EAAP;AACD;AACF,CA3CD;;eA6CeV,sB","sourcesContent":["// @flow\nimport type { PlaybackSource, VideoStreamerConfiguration } from '../types';\nimport Hls from 'hls.js';\nimport { PlaybackError } from '../types';\nimport { broadcastHlsInstance, hlsjsCleanup, hlsjsSetup } from './hlsjsSetup';\nimport type { HlsjsInstanceKeeper, HlsjsVideoStreamerConfiguration } from './HlsjsVideoStreamer';\nimport normalizeSource from '../common/sourceNormalizer';\n\ntype Props<C: VideoStreamerConfiguration> = {\n  source?: ?PlaybackSource,\n  configuration?: ?C\n};\n\nconst getSourceChangeHandler = (instanceKeeper: HlsjsInstanceKeeper) => <\n  C: HlsjsVideoStreamerConfiguration,\n  P: Props<C>\n>(\n  nextProps: P,\n  prevProps?: P\n): Promise<any> => {\n  const { videoElement } = instanceKeeper;\n  hlsjsCleanup(instanceKeeper);\n  const source = normalizeSource(nextProps.source);\n  if (source) {\n    return hlsjsSetup(videoElement, nextProps.configuration).then(hls => {\n      instanceKeeper.hls = hls;\n      // window.hls = hls;\n      broadcastHlsInstance(instanceKeeper, 'on');\n      return new Promise((resolve, reject) => {\n        const onMediaLoaded = () => {\n          hls.off(Hls.Events.MANIFEST_PARSED, onMediaLoaded);\n          try {\n            if (source.startPosition) {\n              hls.startLoad(source.startPosition);\n            } else {\n              hls.startLoad();\n            }\n            resolve();\n          } catch (e) {\n            reject(new PlaybackError('STREAM_ERROR', 'hlsjs', 'Stream load start failed.', 'FATAL', e));\n          }\n        };\n        try {\n          hls.on(Hls.Events.MANIFEST_PARSED, onMediaLoaded);\n          hls.loadSource(source.streamUrl);\n        } catch (e) {\n          reject(new PlaybackError('STREAM_ERROR', 'hlsjs', 'Stream load failed.', 'FATAL', e));\n        }\n      });\n    });\n  } /* else if (prevProps && prevProps.source) {\n    // And no new source.\n    return Promise.resolve(instanceKeeper.hls && instanceKeeper.hls.stopLoad());\n  }*/ else {\n    return Promise.resolve();\n  }\n};\n\nexport default getSourceChangeHandler;\n"],"file":"hlsjsSourceChangeHandler.js"}