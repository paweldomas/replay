{"version":3,"sources":["../../../../src/replay/components/player/VideoStreamer/HlsjsVideoStreamer/hlsjsTextTrackManager.js"],"names":["trackModeMappings","getTrackMode","textTrack","mode","setTrackMode","newMode","indexOf","isEqual","a","b","Number","isNaN","isVideoElementTrackValid","kind","cues","length","label","language","isSourceTracksEqual","ac","bc","isCuesDifferent","filter","cue","index","start","end","content","src","createSelectableTrack","id","origin","videoElementTrack","getHlsjsTextTrackManager","videoElement","instanceKeeper","update","updateTrackElementData","managedTracks","currentTextTrack","selectableTextTracks","emptyTracks","unique","Cue","window","VTTCue","TextTrackCue","notifyPropertyChanges","m","map","selectableTrack","textTracks","addTracks","sourceTracks","Array","isArray","removeEventListener","handleTrackAdd","handleTrackRemove","freshSourceTracks","sourceTrack","managedTrackMatches","managedTrack","isBlacklisted","alreadyAddedTrack","isLoaded","freshManagedTracks","addTextTrack","forEach","addCue","loadPromise","Promise","resolve","trackElementData","srclang","onRef","trackElement","t","track","handleLoad","handleError","e","addEventListener","undefined","then","concat","all","updateFromVideoElement","textTracksList","videoElementTracks","i","push","cleanedUpManagedTracks","freshVideoElementTracks","cleanupTracks","isNewSession","vt","removeCue","handleSourcePropChange","newProps","newTracks","source","handleTextTracksPropChange","clear","handleSelectedTextTrackChange","selectedTextTrack","mt","hls","subtitleDisplay","cleanup","initialize"],"mappings":"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","sourcesContent":["// @flow\n\n// https://github.com/video-dev/hls.js/issues/2147\n// https://github.com/video-dev/hls.js/issues/2198\n\nimport type { AvailableTrack, PlaybackSource, SourceTrack, VideoStreamState } from '../types';\nimport { emptyTracks } from '../common/playbackLifeCycleManager';\nimport { isShallowEqual } from '../../../common';\nimport type { TextTrackManager, TrackElementData } from '../common/types';\nimport normalizeSource from '../common/sourceNormalizer';\nimport type { HlsjsInstanceKeeper } from './HlsjsVideoStreamer';\n\nexport type ManagedTextTrack = {\n  isBlacklisted: boolean,\n  sourceTrack: ?SourceTrack,\n  videoElementTrack?: ?TextTrack,\n  selectableTrack: ?AvailableTrack,\n  trackElementData?: ?TrackElementData,\n  loadPromise?: Promise<?TextTrack>,\n  isLoaded: boolean,\n  error?: any\n};\n\ntype HTMLTextTrackMode = 'disabled' | 'hidden' | 'showing';\n\n/*export type TextTracksStateProps = {\n  currentTextTrack?: ?AvailableTrack,\n  textTracks?: Array<AvailableTrack>\n};*/\n\nconst trackModeMappings = ['disabled', 'hidden', 'showing']; // Index corresponds with \"enum\" value.\n\nfunction getTrackMode(textTrack: TextTrack) {\n  const mode = textTrack.mode;\n  return typeof mode === 'number' ? trackModeMappings[mode] : mode;\n}\n\nfunction setTrackMode(textTrack: TextTrack, newMode: HTMLTextTrackMode) {\n  // $FlowFixMe Some browsers use numbers mapping to modes.\n  textTrack.mode = typeof textTrack.mode === 'number' ? trackModeMappings.indexOf(newMode) : newMode;\n}\n\nfunction isEqual(a: any, b: any): boolean {\n  return (Number.isNaN(a) && Number.isNaN(b)) || (a == null && b == null) || a === b;\n}\n\nfunction isVideoElementTrackValid(textTrack: TextTrack) {\n  // Detecting empty dummy tracks originating from HLS streams in Safari.\n  return (\n    (textTrack.kind !== 'metadata' && !('inBandMetadataTrackDispatchType' in textTrack)) ||\n    (textTrack.cues && textTrack.cues.length) ||\n    textTrack.label ||\n    textTrack.language\n  );\n}\n\nfunction isSourceTracksEqual(a: ?SourceTrack, b: ?SourceTrack): boolean {\n  if (a && b) {\n    if (a.cues && b.cues) {\n      const ac = a.cues,\n        bc = b.cues;\n      if (ac.length === bc.length) {\n        const isCuesDifferent =\n          ac.filter(\n            (cue, index) =>\n              cue.start === bc[index].start && cue.end === bc[index].end && cue.content === bc[index].content\n          ).length !== ac.length;\n        if (isCuesDifferent) {\n          return false;\n        }\n      }\n    }\n    return (\n      isEqual(a.language, b.language) && isEqual(a.kind, b.kind) && isEqual(a.label, b.label) && isEqual(a.src, b.src)\n    );\n  } else {\n    return isEqual(a, b);\n  }\n}\n\nfunction createSelectableTrack(\n  id: number,\n  origin: 'in-stream' | 'side-loaded',\n  videoElementTrack: TextTrack\n): AvailableTrack {\n  return {\n    id,\n    kind: videoElementTrack.kind || '',\n    label: videoElementTrack.label || '',\n    language: videoElementTrack.language || '',\n    origin\n  };\n}\n\nconst getHlsjsTextTrackManager = (\n  videoElement: HTMLVideoElement,\n  instanceKeeper: HlsjsInstanceKeeper,\n  update: <T: VideoStreamState>(props: T) => void,\n  updateTrackElementData: (Array<TrackElementData>) => void\n): TextTrackManager => {\n  // Should use TextTracksStateProps above.\n  let managedTracks: Array<ManagedTextTrack> = [];\n  let currentTextTrack = null;\n  let selectableTextTracks = emptyTracks;\n  let unique = 0;\n  const Cue = window.VTTCue || window.TextTrackCue;\n\n  function notifyPropertyChanges() {\n    currentTextTrack = managedTracks\n      .filter(m => m.videoElementTrack != null && getTrackMode(m.videoElementTrack) === 'showing')\n      .map(m => m.selectableTrack)[0];\n\n    const textTracks = managedTracks.filter(m => m.selectableTrack).map(m => m.selectableTrack);\n    if (isShallowEqual(textTracks, selectableTextTracks)) {\n      // $FlowFixMe Complaints about null entries, despite filter above.\n      update({\n        currentTextTrack,\n        textTracks: selectableTextTracks\n      });\n    } else {\n      selectableTextTracks = textTracks;\n      update({\n        currentTextTrack,\n        textTracks\n      });\n    }\n  }\n\n  function addTracks(sourceTracks?: Array<SourceTrack>) {\n    if (Array.isArray(sourceTracks)) {\n      videoElement.textTracks.removeEventListener('addtrack', handleTrackAdd);\n      videoElement.textTracks.removeEventListener('removetrack', handleTrackRemove);\n\n      const freshSourceTracks = sourceTracks.filter(sourceTrack => {\n        const managedTrackMatches = managedTracks.filter(managedTrack => {\n          return isSourceTracksEqual(managedTrack.sourceTrack, sourceTrack) && !managedTrack.isBlacklisted;\n        });\n        if (managedTrackMatches.length === 0) {\n          return true;\n        } else {\n          const alreadyAddedTrack = managedTrackMatches[0];\n          alreadyAddedTrack.sourceTrack = sourceTrack;\n          alreadyAddedTrack.isBlacklisted = false;\n          alreadyAddedTrack.isLoaded = true; // Is this assumption correct?\n          return false;\n        }\n      });\n\n      const freshManagedTracks: Array<ManagedTextTrack> = freshSourceTracks.map(sourceTrack => {\n        const id = ++unique;\n        if (Array.isArray(sourceTrack.cues)) {\n          const cues = sourceTrack.cues;\n          const videoElementTrack = videoElement.addTextTrack('subtitles', sourceTrack.label, sourceTrack.language);\n          cues.forEach(cue => {\n            videoElementTrack.addCue(new Cue(cue.start, cue.end, cue.content));\n          });\n          return {\n            id,\n            sourceTrack,\n            isBlacklisted: false,\n            videoElementTrack,\n            selectableTrack: createSelectableTrack(id, 'side-loaded', videoElementTrack),\n            loadPromise: Promise.resolve(videoElementTrack),\n            isLoaded: true\n          };\n        } else {\n          const trackElementData: TrackElementData = {\n            src: sourceTrack.src,\n            srclang: sourceTrack.language,\n            kind: sourceTrack.kind || 'subtitles',\n            label: sourceTrack.label\n          };\n          const loadPromise = new Promise(resolve => {\n            trackElementData.onRef = (trackElement: ?HTMLTrackElement) => {\n              const t = trackElement;\n              if (t) {\n                setTrackMode(t.track, 'hidden');\n                const handleLoad = () => {\n                  t.removeEventListener('load', handleLoad);\n                  t.removeEventListener('error', handleError);\n                  resolve(t.track);\n                };\n                const handleError = (e: Event) => {\n                  t.removeEventListener('load', handleLoad);\n                  t.removeEventListener('error', handleError);\n                  resolve();\n                };\n                t.addEventListener('load', handleLoad);\n                t.addEventListener('error', handleError);\n              }\n            };\n          });\n          const managedTrack = {\n            id,\n            sourceTrack,\n            isBlacklisted: false,\n            videoElementTrack: undefined,\n            selectableTrack: undefined,\n            trackElementData,\n            loadPromise,\n            isLoaded: false\n          };\n          loadPromise.then(videoElementTrack => {\n            if (videoElementTrack != null) {\n              managedTrack.videoElementTrack = videoElementTrack;\n              managedTrack.selectableTrack = createSelectableTrack(id, 'side-loaded', videoElementTrack);\n            }\n            managedTrack.isLoaded = true;\n          });\n          return managedTrack;\n        }\n      });\n\n      managedTracks = managedTracks.concat(freshManagedTracks);\n\n      updateTrackElementData(\n        // $FlowFixMe Filtering away null/undefined isn't recognised.\n        managedTracks.filter(t => t.trackElementData && !t.isBlacklisted).map(t => t.trackElementData)\n      );\n\n      return Promise.all(freshManagedTracks.map(managedTrack => managedTrack.loadPromise)).then(() => {\n        videoElement.textTracks.addEventListener('addtrack', handleTrackAdd);\n        videoElement.textTracks.addEventListener('removetrack', handleTrackRemove);\n        notifyPropertyChanges();\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  function updateFromVideoElement(textTracksList: TextTrackList) {\n    if (textTracksList.length === 0 && managedTracks.length === 0) {\n      return;\n    }\n\n    const videoElementTracks: Array<TextTrack> = [];\n    for (let i = 0; i < textTracksList.length; i++) {\n      // Awkward for-loop because Flow doesn't understand Array.from().\n      videoElementTracks.push(textTracksList[i]);\n    }\n\n    const cleanedUpManagedTracks = managedTracks.filter(managedTrack => {\n      return videoElementTracks.indexOf(managedTrack.videoElementTrack) >= 0;\n    });\n\n    //const isRemoving = cleanedUpManagedTracks.length < managedTracks.length;\n    //const isAdding = videoElementTracks.length > cleanedUpManagedTracks.length;\n\n    if (videoElementTracks.length > cleanedUpManagedTracks.length) {\n      const freshVideoElementTracks = videoElementTracks.filter(\n        videoElementTrack =>\n          isVideoElementTrackValid(videoElementTrack) &&\n          cleanedUpManagedTracks.filter(function(managedTrack) {\n            return videoElementTrack === managedTrack.videoElementTrack;\n          }).length === 0\n      );\n      const freshManagedTracks: Array<ManagedTextTrack> = freshVideoElementTracks.map(videoElementTrack => {\n        const id = ++unique;\n        return {\n          id,\n          sourceTrack: null,\n          videoElementTrack,\n          isBlacklisted: false,\n          selectableTrack: createSelectableTrack(id, 'in-stream', videoElementTrack),\n          isLoaded: true\n        };\n      });\n      managedTracks = cleanedUpManagedTracks.concat(freshManagedTracks);\n    } else {\n      managedTracks = cleanedUpManagedTracks;\n    }\n  }\n\n  function cleanupTracks(isNewSession: boolean) {\n    updateFromVideoElement(videoElement.textTracks);\n    managedTracks.forEach(m => {\n      // Blacklisting and removing side-loaded tracks.\n      if (isNewSession || m.sourceTrack != null) {\n        m.isBlacklisted = true;\n      }\n      if (m.videoElementTrack != null && isNewSession) {\n        const vt = m.videoElementTrack;\n        if (vt.cues) {\n          while (vt.cues.length) {\n            vt.removeCue(vt.cues[0]);\n          }\n        }\n        setTrackMode(vt, 'disabled');\n      }\n      m.selectableTrack = null;\n    });\n    selectableTextTracks = emptyTracks;\n    updateTrackElementData([]);\n  }\n\n  function handleSourcePropChange(newProps: { source?: ?PlaybackSource, textTracks?: ?Array<SourceTrack> }) {\n    updateFromVideoElement(videoElement.textTracks);\n    const newTracks = newProps.source && Array.isArray(newProps.textTracks) ? newProps.textTracks : [];\n    const source = normalizeSource(newProps.source);\n    if (source && source.textTracks) {\n      addTracks(newTracks.concat(source.textTracks));\n    } else {\n      addTracks(newTracks);\n    }\n  }\n\n  function handleTextTracksPropChange(newProps: { source?: ?PlaybackSource, textTracks?: ?Array<SourceTrack> }) {\n    cleanupTracks(false);\n    const newTracks = newProps.source && Array.isArray(newProps.textTracks) ? newProps.textTracks : [];\n    addTracks(newTracks);\n  }\n\n  function clear() {\n    cleanupTracks(true);\n  }\n\n  function handleSelectedTextTrackChange(selectedTextTrack: ?AvailableTrack) {\n    managedTracks\n      .filter(mt => mt.videoElementTrack && getTrackMode(mt.videoElementTrack) === 'showing')\n      .forEach(mt => mt.videoElementTrack && setTrackMode(mt.videoElementTrack, 'hidden'));\n    if (selectedTextTrack) {\n      if (instanceKeeper.hls) {\n        instanceKeeper.hls.subtitleDisplay = true;\n      }\n      const managedTrack = managedTracks.filter(mt => mt.selectableTrack === selectedTextTrack)[0];\n      if (managedTrack && managedTrack.videoElementTrack) {\n        setTrackMode(managedTrack.videoElementTrack, 'showing');\n      }\n    } else if (instanceKeeper.hls) {\n      instanceKeeper.hls.subtitleDisplay = false;\n    }\n    notifyPropertyChanges();\n  }\n\n  function handleTrackAdd() {\n    updateFromVideoElement(videoElement.textTracks);\n    notifyPropertyChanges();\n  }\n\n  function handleTrackRemove() {\n    updateFromVideoElement(videoElement.textTracks);\n    notifyPropertyChanges();\n  }\n\n  function cleanup() {\n    videoElement.textTracks.removeEventListener('addtrack', handleTrackAdd);\n    videoElement.textTracks.removeEventListener('removetrack', handleTrackRemove);\n  }\n\n  function initialize() {\n    videoElement.textTracks.addEventListener('addtrack', handleTrackAdd);\n    videoElement.textTracks.addEventListener('removetrack', handleTrackRemove);\n  }\n\n  initialize();\n\n  return {\n    handleSelectedTextTrackChange,\n    handleTextTracksPropChange,\n    handleSourcePropChange,\n    clear,\n    cleanup\n  };\n};\n\nexport default getHlsjsTextTrackManager;\n"],"file":"hlsjsTextTrackManager.js"}