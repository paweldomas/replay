{"version":3,"sources":["../../../../src/replay/components/player/VideoStreamer/HtmlVideoStreamer/fairPlaySourceChangeHandler.js"],"names":["keyStr","technology","RequestError","Error","constructor","status","url","message","method","getRequestError","xhr","PlaybackError","stringToArray","string","buffer","ArrayBuffer","length","array","Uint16Array","i","strLen","charCodeAt","arrayToString","String","fromCharCode","apply","base64DecodeUint8Array","input","raw","window","atob","rawLength","Uint8Array","base64EncodeUint8Array","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","Number","NaN","isNaN","charAt","extractContentId","initData","contentIdExtractMatch","regex","RegExp","exec","matches","concatInitDataIdAndCertificate","isBase64","contentId","cert","offset","byteLength","dataView","DataView","initDataArray","set","setUint32","idArray","certArray","formatRequestPayloadAsPostParameters","spc","encodeURIComponent","toString","getFairPlayLicenseAcquirer","videoElement","acquisitionDetails","onError","log","keySystem","fairPlayCertificateUrl","licenseRequestHeaders","Object","entries","map","name","value","isBinary","requestFormat","certificate","licenseUrl","onNeedKey","event","idString","replace","webkitKeys","webkitSetMediaKeys","WebKitMediaKeys","handleError","substring","indexOf","createKeySession","request","XMLHttpRequest","responseType","addEventListener","response","open","send","keySession","createSession","licenseRequestReady","onkeyadded","onkeyerror","session","target","arrayBuffer","update","keyText","responseText","trim","substr","slice","forEach","setRequestHeader","code","error","cleanup","removeEventListener","playbackError","hydrateLicenseAquisitionDetails","source","configuration","normalizedSource","config","licenseAcquisition","fairPlay","licenseAcquisitionDetails","serviceCertificateUrl","fairPlayRequestFormat","getSourceChangeHandler","handleBasicSourceChange","previousSession","handleSourceChange","nextProps","prevProps","onPlaybackError"],"mappings":";;;;;;;AACA;;AAEA;;AACA;;;;;;AAeA,MAAMA,MAAM,GAAG,mEAAf;AACA,MAAMC,UAAU,GAAG,MAAnB;;AAEA,MAAMC,YAAN,SAA2BC,KAA3B,CAAiC;AAC/BC,EAAAA,WAAW,CAACC,MAAD,EAAiBC,GAAjB,EAA8BC,OAA9B,EAA+CC,MAA/C,EAAuE;AAChF,UAAMD,OAAN;;AADgF;;AAAA;;AAAA;;AAEhF,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKE,MAAL,GAAcA,MAAd;AACD;;AAN8B;;AAYjC,SAASC,eAAT,CAAyBC,GAAzB,EAA8BJ,GAA9B,EAAmCC,OAAnC,EAA4CC,MAAM,GAAG,KAArD,EAA4D;AAC1D,SAAO,IAAIG,oBAAJ,CACL,uBADK,EAELV,UAFK,EAGLM,OAHK,EAIL,OAJK,EAKL,IAAIL,YAAJ,CAAiBQ,GAAG,CAACL,MAArB,EAA6BC,GAA7B,EAAkCC,OAAlC,EAA2CC,MAA3C,CALK,CAAP;AAOD;;AAED,SAASI,aAAT,CAAuBC,MAAvB,EAAuC;AACrC,QAAMC,MAAM,GAAG,IAAIC,WAAJ,CAAgBF,MAAM,CAACG,MAAP,GAAgB,CAAhC,CAAf,CADqC,CACc;;AACnD,QAAMC,KAAK,GAAG,IAAIC,WAAJ,CAAgBJ,MAAhB,CAAd;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAGP,MAAM,CAACG,MAAhC,EAAwCG,CAAC,GAAGC,MAA5C,EAAoDD,CAAC,EAArD,EAAyD;AACvDF,IAAAA,KAAK,CAACE,CAAD,CAAL,GAAWN,MAAM,CAACQ,UAAP,CAAkBF,CAAlB,CAAX;AACD;;AACD,SAAOF,KAAP;AACD;;AAED,SAASK,aAAT,CAAuBL,KAAvB,EAA8B;AAC5B,SAAOM,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgC,IAAIP,WAAJ,CAAgBD,KAAK,CAACH,MAAtB,CAAhC,CAAP;AACD;;AAED,SAASY,sBAAT,CAAgCC,KAAhC,EAAuC;AACrC,QAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAZ;AACA,QAAMI,SAAS,GAAGH,GAAG,CAACZ,MAAtB;AACA,QAAMC,KAAK,GAAG,IAAIe,UAAJ,CAAe,IAAIjB,WAAJ,CAAgBgB,SAAhB,CAAf,CAAd;;AACA,OAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,SAApB,EAA+BZ,CAAC,EAAhC,EAAoC;AAClCF,IAAAA,KAAK,CAACE,CAAD,CAAL,GAAWS,GAAG,CAACP,UAAJ,CAAeF,CAAf,CAAX;AACD;;AACD,SAAOF,KAAP;AACD;;AAED,SAASgB,sBAAT,CAAgCN,KAAhC,EAAuC;AACrC,MAAIO,MAAM,GAAG,EAAb;AACA,MAAIC,IAAJ,EAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,IAAxC;AACA,MAAItB,CAAC,GAAG,CAAR;;AAEA,SAAOA,CAAC,GAAGQ,KAAK,CAACX,MAAjB,EAAyB;AACvBmB,IAAAA,IAAI,GAAGR,KAAK,CAACR,CAAC,EAAF,CAAZ;AACAiB,IAAAA,IAAI,GAAGjB,CAAC,GAAGQ,KAAK,CAACX,MAAV,GAAmBW,KAAK,CAACR,CAAC,EAAF,CAAxB,GAAgCuB,MAAM,CAACC,GAA9C;AACAN,IAAAA,IAAI,GAAGlB,CAAC,GAAGQ,KAAK,CAACX,MAAV,GAAmBW,KAAK,CAACR,CAAC,EAAF,CAAxB,GAAgCuB,MAAM,CAACC,GAA9C;AAEAL,IAAAA,IAAI,GAAGH,IAAI,IAAI,CAAf;AACAI,IAAAA,IAAI,GAAI,CAACJ,IAAI,GAAG,CAAR,KAAc,CAAf,GAAqBC,IAAI,IAAI,CAApC;AACAI,IAAAA,IAAI,GAAI,CAACJ,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAI,IAAAA,IAAI,GAAGJ,IAAI,GAAG,EAAd;;AAEA,QAAIO,KAAK,CAACR,IAAD,CAAT,EAAiB;AACfI,MAAAA,IAAI,GAAGC,IAAI,GAAG,EAAd;AACD,KAFD,MAEO,IAAIG,KAAK,CAACP,IAAD,CAAT,EAAiB;AACtBI,MAAAA,IAAI,GAAG,EAAP;AACD;;AACDP,IAAAA,MAAM,IAAIlC,MAAM,CAAC6C,MAAP,CAAcP,IAAd,IAAsBtC,MAAM,CAAC6C,MAAP,CAAcN,IAAd,CAAtB,GAA4CvC,MAAM,CAAC6C,MAAP,CAAcL,IAAd,CAA5C,GAAkExC,MAAM,CAAC6C,MAAP,CAAcJ,IAAd,CAA5E;AACD;;AACD,SAAOP,MAAP;AACD;;AAED,SAASY,gBAAT,CAA0BC,QAA1B,EAAoCC,qBAApC,EAA+E;AAC7E,QAAM1C,GAAG,GAAGgB,aAAa,CAACyB,QAAD,CAAzB;AACA,QAAME,KAAK,GAAGD,qBAAqB,GAC/B,OAAOA,qBAAP,KAAiC,QAAjC,GACE,IAAIE,MAAJ,CAAWF,qBAAX,CADF,GAEEA,qBAH6B,GAI/B,WAJJ;;AAKA,MAAIC,KAAK,CAACE,IAAV,EAAgB;AACd,UAAMC,OAAO,GAAGH,KAAK,CAACE,IAAN,CAAW7C,GAAX,CAAhB;AACA,WAAO8C,OAAO,IAAIA,OAAO,CAAC,CAAD,CAAzB;AACD;AACF;;AAED,SAASC,8BAAT,CACEC,QADF,EAEEP,QAFF,EAGEQ,SAHF,EAIEC,IAJF,EAKE;AACA,MAAI,OAAOD,SAAP,KAAqB,QAAzB,EAAmC;AACjCA,IAAAA,SAAS,GAAG3C,aAAa,CAAC2C,SAAD,CAAzB;AACD,GAFD,MAEO,IAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACxCA,IAAAA,SAAS,GAAG3C,aAAa,CAAC,KAAK2C,SAAN,CAAzB;AACD,GALD,CAMA;;;AACA,MAAIE,MAAM,GAAG,CAAb;AACA,QAAM3C,MAAM,GAAG,IAAIC,WAAJ,CAAgBgC,QAAQ,CAACW,UAAT,GAAsB,CAAtB,GAA0BH,SAAS,CAACG,UAApC,GAAiD,CAAjD,GAAqDF,IAAI,CAACE,UAA1E,CAAf;AACA,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,CAAa9C,MAAb,CAAjB;AAEA,QAAM+C,aAAa,GAAG,IAAI7B,UAAJ,CAAelB,MAAf,EAAuB2C,MAAvB,EAA+BV,QAAQ,CAACW,UAAxC,CAAtB;AACAG,EAAAA,aAAa,CAACC,GAAd,CAAkBf,QAAlB;AACAU,EAAAA,MAAM,IAAIV,QAAQ,CAACW,UAAnB;AAEAC,EAAAA,QAAQ,CAACI,SAAT,CAAmBN,MAAnB,EAA2BF,SAAS,CAACG,UAArC,EAAiD,IAAjD;AACAD,EAAAA,MAAM,IAAI,CAAV;AAEA,QAAMO,OAAO,GAAGV,QAAQ,GACpB,IAAItB,UAAJ,CAAelB,MAAf,EAAuB2C,MAAvB,EAA+BF,SAAS,CAACG,UAAzC,CADoB,GAEpB,IAAIxC,WAAJ,CAAgBJ,MAAhB,EAAwB2C,MAAxB,EAAgCF,SAAS,CAACvC,MAA1C,CAFJ;AAGAgD,EAAAA,OAAO,CAACF,GAAR,CAAYP,SAAZ;AACAE,EAAAA,MAAM,IAAIO,OAAO,CAACN,UAAlB;AAEAC,EAAAA,QAAQ,CAACI,SAAT,CAAmBN,MAAnB,EAA2BD,IAAI,CAACE,UAAhC,EAA4C,IAA5C;AACAD,EAAAA,MAAM,IAAI,CAAV;AAEA,QAAMQ,SAAS,GAAG,IAAIjC,UAAJ,CAAelB,MAAf,EAAuB2C,MAAvB,EAA+BD,IAAI,CAACE,UAApC,CAAlB;AACAO,EAAAA,SAAS,CAACH,GAAV,CAAcN,IAAd;AAEA,SAAO,IAAIxB,UAAJ,CAAelB,MAAf,EAAuB,CAAvB,EAA0BA,MAAM,CAAC4C,UAAjC,CAAP;AACD;;AAED,SAASQ,oCAAT,CAA8CC,GAA9C,EAAmDZ,SAAnD,EAAmF;AACjF,MAAIA,SAAJ,EAAe;AACb,WACE,eAAea,kBAAkB,CAACb,SAAS,CAACc,QAAV,EAAD,CAAjC,GAA0D,MAA1D,GAAmED,kBAAkB,CAACnC,sBAAsB,CAACkC,GAAD,CAAvB,CADvF;AAGD,GAJD,MAIO;AACL,WAAO,SAASC,kBAAkB,CAACnC,sBAAsB,CAACkC,GAAD,CAAvB,CAAlC;AACD;AACF;;AAED,MAAMG,0BAA0B,GAAG,CACjCC,YADiC,EAEjCC,kBAFiC,EAGjCC,OAHiC,EAIjCC,GAJiC,KAK9B;AACH,MAAI,EAAEF,kBAAkB,IAAI,qBAAqB3C,MAA7C,CAAJ,EAA0D;AACxD;AACD;;AACD,QAAM8C,SAAS,GAAG,mBAAlB;AAJG,QAKK3B,qBALL,GAKuDwB,kBALvD,CAKKxB,qBALL;AAAA,QAK4B4B,sBAL5B,GAKuDJ,kBALvD,CAK4BI,sBAL5B;AAMH,QAAMC,qBAAqB,GACxBL,kBAAkB,CAACK,qBAAnB,IACCC,MAAM,CAACC,OAAP,CAAeP,kBAAkB,CAACK,qBAAlC,EAAyDG,GAAzD,CAA6D,CAAC,CAACC,IAAD,EAAOC,KAAP,CAAD,MAAoB;AAC/ED,IAAAA,IAD+E;AAE/EC,IAAAA;AAF+E,GAApB,CAA7D,CADF,IAKA,EANF;AAOA,QAAMC,QAAQ,GAAGX,kBAAkB,CAACY,aAAnB,KAAqC,QAAtD;AACA,QAAM9B,QAAQ,GAAGkB,kBAAkB,CAACY,aAAnB,KAAqC,QAAtD;AACA,MAAIC,WAAW,GAAG,IAAlB;AAfG,MAgBG9B,SAhBH,GAgB6BiB,kBAhB7B,CAgBGjB,SAhBH;AAAA,MAgBc+B,UAhBd,GAgB6Bd,kBAhB7B,CAgBcc,UAhBd;;AAkBH,WAASC,SAAT,CAAmBC,KAAnB,EAAoD;AAClD,UAAMzC,QAAQ,GAAGyC,KAAK,CAACzC,QAAvB;AACA,UAAM0C,QAAQ,GAAGN,QAAQ,GACrB7D,aAAa,CAACyB,QAAD,CAAb,CAAwB2C,OAAxB,CAAgC,UAAhC,EAA4C,EAA5C,CADqB,GAErBnC,SAAS,IAAIT,gBAAgB,CAACC,QAAD,EAAWC,qBAAX,CAFjC;;AAIA,QAAImC,QAAJ,EAAc;AACZT,MAAAA,GAAG,IAAIA,GAAG,CAAC,qCAAD,EAAwCnB,SAAxC,CAAV;AACD,KAFD,MAEO,IAAI,CAACA,SAAL,EAAgB;AACrBmB,MAAAA,GAAG,IAAIA,GAAG,CAAC,qCAAD,EAAwCnB,SAAxC,CAAV;AACD,KAViD,CAYlD;;;AACA,QAAI,CAACgB,YAAY,CAACoB,UAAlB,EAA8B;AAC5B;AACApB,MAAAA,YAAY,CAACqB,kBAAb,CAAgC,IAAI/D,MAAM,CAACgE,eAAX,CAA2BlB,SAA3B,CAAhC;AACD,KAhBiD,CAkBlD;;;AACA,QAAI,CAACJ,YAAY,CAACoB,UAAlB,EAA8B;AAC5BG,MAAAA,WAAW,CACT,IAAInF,oBAAJ,CAAkB,qCAAlB,EAAyDV,UAAzD,EAAqE,+BAArE,CADS,CAAX;AAGA;AACD;;AAED,QAAI,CAACqF,UAAL,EAAiB;AACf,YAAMhF,GAAG,GAAGgB,aAAa,CAACyB,QAAD,CAAb,CAAwBgD,SAAxB,CAAkC,CAAlC,CAAZ;AACAT,MAAAA,UAAU,GAAGhF,GAAG,CAACyF,SAAJ,CAAczF,GAAG,CAAC0F,OAAJ,CAAY,GAAZ,EAAiB1F,GAAG,CAAC0F,OAAJ,CAAY,KAAZ,IAAqB,CAAtC,CAAd,CAAb;AACD;;AACD,QAAIP,QAAJ,EAAc;AACZ,UAAIJ,WAAJ,EAAiB;AACf,YAAI,CAACY,gBAAgB,CAACR,QAAD,EAAWpC,8BAA8B,CAACC,QAAD,EAAWP,QAAX,EAAqB0C,QAArB,EAA+BJ,WAA/B,CAAzC,CAArB,EAA4G;AAC1GS,UAAAA,WAAW,CACT,IAAInF,oBAAJ,CAAkB,qCAAlB,EAAyDV,UAAzD,EAAqE,+BAArE,CADS,CAAX;AAGA;AACD;AACF,OAPD,MAOO;AACL;AACA,cAAMiG,OAAO,GAAG,IAAIC,cAAJ,EAAhB;AACAD,QAAAA,OAAO,CAACE,YAAR,GAAuB,aAAvB;AACAF,QAAAA,OAAO,CAACG,gBAAR,CAAyB,MAAzB,EAAiC,MAAM;AACrC,cAAIH,OAAO,CAAC7F,MAAR,IAAkB6F,OAAO,CAAC7F,MAAR,GAAiB,GAAvC,EAA4C;AAC1CgF,YAAAA,WAAW,GAAG,IAAIrD,UAAJ,CAAekE,OAAO,CAACI,QAAvB,CAAd;;AACA,gBAAIL,gBAAgB,CAACR,QAAD,EAAWpC,8BAA8B,CAACC,QAAD,EAAWP,QAAX,EAAqB0C,QAArB,EAA+BJ,WAA/B,CAAzC,CAApB,EAA2G;AACzGS,cAAAA,WAAW,CACT,IAAInF,oBAAJ,CAAkB,qCAAlB,EAAyDV,UAAzD,EAAqE,+BAArE,CADS,CAAX;AAGA;AACD;AACF,WARD,MAQO;AACL6F,YAAAA,WAAW,CAACrF,eAAe,CAACyF,OAAD,EAAUtB,sBAAV,EAAkC,0CAAlC,CAAhB,CAAX;AACA;AACD;AACF,SAbD;AAcAsB,QAAAA,OAAO,CAACG,gBAAR,CACE,OADF,EAEE,MACEP,WAAW,CACTrF,eAAe,CAACyF,OAAD,EAAUtB,sBAAV,EAAkC,+CAAlC,CADN,CAHf,EAME,KANF;AAQAsB,QAAAA,OAAO,CAACG,gBAAR,CACE,SADF,EAEE,MACEP,WAAW,CACTrF,eAAe,CAACyF,OAAD,EAAUtB,sBAAV,EAAkC,6CAAlC,CADN,CAHf,EAME,KANF;AAQAsB,QAAAA,OAAO,CAACK,IAAR,CAAa,KAAb,EAAoB3B,sBAApB,EAA4C,IAA5C;AACAsB,QAAAA,OAAO,CAACM,IAAR;AACD;AACF,KA7CD,MA6CO;AACLV,MAAAA,WAAW,CACT,IAAInF,oBAAJ,CACE,cADF,EAEEV,UAFF,EAGE,wEAHF,EAIE,OAJF,CADS,CAAX;AAQD;AACF;;AAED,WAASgG,gBAAT,CAA0B1C,SAA1B,EAAqCR,QAArC,EAA+C;AAC7C;AACA,UAAM0D,UAAU,GAAGlC,YAAY,CAACoB,UAAb,CAAwBe,aAAxB,CAAsC,WAAtC,EAAmD3D,QAAnD,CAAnB;;AACA,QAAI,CAAC0D,UAAL,EAAiB;AACf,aAAO,KAAP;AACD;;AACDA,IAAAA,UAAU,CAAClD,SAAX,GAAuBA,SAAvB,CAN6C,CAO7C;;AACAkD,IAAAA,UAAU,CAACJ,gBAAX,CAA4B,kBAA5B,EAAgDM,mBAAhD,EAAqE,KAArE;AACAF,IAAAA,UAAU,CAACJ,gBAAX,CAA4B,gBAA5B,EAA8CO,UAA9C,EAA0D,KAA1D;AACAH,IAAAA,UAAU,CAACJ,gBAAX,CAA4B,gBAA5B,EAA8CQ,UAA9C,EAA0D,KAA1D;AACD;;AAED,WAASF,mBAAT,CAA6BnB,KAA7B,EAAoC;AAClCd,IAAAA,GAAG,IAAIA,GAAG,CAAC,wCAAD,CAAV;AACA,UAAMoC,OAAO,GAAGtB,KAAK,CAACuB,MAAtB;AACA,UAAMxG,OAAO,GAAGiF,KAAK,CAACjF,OAAtB;AACA,UAAM2F,OAAO,GAAG,IAAIC,cAAJ,EAAhB;AACAD,IAAAA,OAAO,CAACE,YAAR,GAAuBjB,QAAQ,GAAG,aAAH,GAAmB,MAAlD;AAEAe,IAAAA,OAAO,CAACG,gBAAR,CAAyB,MAAzB,EAAiC,MAAM;AACrC,UAAIH,OAAO,CAAC7F,MAAR,IAAkB6F,OAAO,CAAC7F,MAAR,GAAiB,GAAvC,EAA4C;AAC1C,YAAI8E,QAAJ,EAAc;AACZ,gBAAM6B,WAAW,GAAGd,OAAO,CAACI,QAA5B;AACAQ,UAAAA,OAAO,CAACG,MAAR,CAAe,IAAIjF,UAAJ,CAAegF,WAAf,CAAf;AACD,SAHD,MAGO;AACL;AACA;AACA,cAAIE,OAAO,GAAGhB,OAAO,CAACiB,YAAR,CAAqBC,IAArB,EAAd;;AACA,cAAIF,OAAO,CAACG,MAAR,CAAe,CAAf,EAAkB,CAAlB,MAAyB,OAAzB,IAAoCH,OAAO,CAACG,MAAR,CAAe,CAAC,CAAhB,MAAuB,QAA/D,EAAyE;AACvEH,YAAAA,OAAO,GAAGA,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAV;AACD;;AACDR,UAAAA,OAAO,CAACG,MAAR,CAAevF,sBAAsB,CAACwF,OAAD,CAArC;AACD;AACF,OAbD,MAaO;AACLpB,QAAAA,WAAW,CAACrF,eAAe,CAACyF,OAAD,EAAUZ,UAAV,EAAsB,yCAAtB,EAAiE,MAAjE,CAAhB,CAAX;AACD;AACF,KAjBD;AAkBAY,IAAAA,OAAO,CAACG,gBAAR,CACE,OADF,EAEE,MACEP,WAAW,CAACrF,eAAe,CAACyF,OAAD,EAAUtB,sBAAV,EAAkC,8CAAlC,CAAhB,CAHf,EAIE,KAJF;AAMAsB,IAAAA,OAAO,CAACG,gBAAR,CACE,SADF,EAEE,MAAMP,WAAW,CAACrF,eAAe,CAACyF,OAAD,EAAUtB,sBAAV,EAAkC,4CAAlC,CAAhB,CAFnB,EAGE,KAHF;AAMAsB,IAAAA,OAAO,CAACK,IAAR,CAAa,MAAb,EAAqBjB,UAArB,EAAiC,IAAjC;AACAT,IAAAA,qBAAqB,CAAC0C,OAAtB,CAA8B,UAAS;AAAEtC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAT,EAA0B;AACtDgB,MAAAA,OAAO,CAACsB,gBAAR,CAAyBvC,IAAzB,EAA+BC,KAA/B;AACD,KAFD;;AAGA,QAAIC,QAAJ,EAAc;AACZe,MAAAA,OAAO,CAACsB,gBAAR,CAAyB,cAAzB,EAAyC,0BAAzC;AACAtB,MAAAA,OAAO,CAACM,IAAR,CAAajG,OAAb;AACD,KAHD,MAGO,IAAI+C,QAAJ,EAAc;AACnB4C,MAAAA,OAAO,CAACM,IAAR,CAAavE,sBAAsB,CAAC1B,OAAD,CAAnC;AACD,KAFM,MAEA;AACL2F,MAAAA,OAAO,CAACsB,gBAAR,CAAyB,cAAzB,EAAyC,mCAAzC;AACAtB,MAAAA,OAAO,CAACM,IAAR,CAAatC,oCAAoC,CAAC3D,OAAD,EAAUgD,SAAV,CAAjD;AACD;AACF;;AAED,WAASqD,UAAT,CAAoBpB,KAApB,EAA2B;AACzBd,IAAAA,GAAG,IAAIA,GAAG,CAAC,sBAAD,EAAyBc,KAAzB,CAAV;AACD;;AAED,WAASqB,UAAT,CAAoBrB,KAApB,EAAgC;AAC9B,UAAMiC,IAAI,GAAIjC,KAAK,CAACuB,MAAN,IAAgBvB,KAAK,CAACuB,MAAN,CAAaW,KAA7B,IAAsClC,KAAK,CAACuB,MAAN,CAAaW,KAAb,CAAmBD,IAA1D,IAAmE,CAAhF;;AACA,QAAIA,IAAI,KAAK,CAAT,IAAcA,IAAI,KAAK,CAA3B,EAA8B;AAC5B,YAAMlH,OAAO,GACX,sGADF;AAEAuF,MAAAA,WAAW,CACT,IAAInF,oBAAJ,CACE,iCADF,EAEEV,UAFF,EAGEM,OAHF,EAIE,OAJF,EAKEiF,KAAK,CAACuB,MAAN,IAAgBvB,KAAK,CAACuB,MAAN,CAAaW,KAL/B,CADS,CAAX;AASD,KAZD,MAYO;AACL5B,MAAAA,WAAW,CACT,IAAInF,oBAAJ,CACE,qBADF,EAEEV,UAFF,EAGE,oCAHF,EAIE,OAJF,EAKEuF,KAAK,CAACuB,MAAN,IAAgBvB,KAAK,CAACuB,MAAN,CAAaW,KAL/B,CADS,CAAX;AASD;;AACDC,IAAAA,OAAO;AACR,GAxME,CA0MH;;;AACApD,EAAAA,YAAY,CAAC8B,gBAAb,CAA8B,eAA9B,EAA+Cd,SAA/C,EAA0D,KAA1D;;AAEA,WAASoC,OAAT,GAAmB;AACjB;AACApD,IAAAA,YAAY,CAACqD,mBAAb,CAAiC,eAAjC,EAAkDrC,SAAlD,EAA6D,KAA7D;AACD;;AAED,WAASO,WAAT,CAAqB+B,aAArB,EAAoC;AAClC,QAAIpD,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACoD,aAAD,CAAP;AACD;;AACDF,IAAAA,OAAO;AACR;;AAED,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAjOD;;AAmOA,SAASG,+BAAT,CAAyCC,MAAzC,EAAkEC,aAAlE,EAA8G;AAC5G,QAAMC,gBAAgB,GAAG,+BAAgBF,MAAhB,CAAzB;;AACA,MAAIE,gBAAgB,IAAIA,gBAAgB,CAAC3C,UAAzC,EAAqD;AACnD,UAAMA,UAAU,GAAG2C,gBAAgB,CAAC3C,UAApC;AACA,UAAM4C,MAAM,GACTF,aAAa,IAAIA,aAAa,CAACG,kBAA/B,IAAqDH,aAAa,CAACG,kBAAd,CAAiCC,QAAvF,IAAoG,EADtG;AAEA,UAAMC,yBAAyB,GAAGJ,gBAAgB,CAACI,yBAAjB,IAA8C,EAAhF;AAEA,UAAMzD,sBAAsB,GAAGyD,yBAAyB,CAACzD,sBAA1B,IAAoDsD,MAAM,CAACI,qBAA1F;AACA,UAAMtF,qBAAqB,GAAGqF,yBAAyB,CAACrF,qBAA1B,IAAmDkF,MAAM,CAAClF,qBAAxF;AAEA,UAAMoC,aAAa,GAAGiD,yBAAyB,CAACE,qBAA1B,IAAmDL,MAAM,CAAC9C,aAA1D,IAA2E,UAAjG;AACA,UAAMP,qBAAqB,GAAGwD,yBAAyB,CAACxD,qBAAxD;AACA,UAAMtB,SAAS,GAAG8E,yBAAyB,CAAC9E,SAA5C;;AAEA,QAAI,CAACqB,sBAAL,EAA6B;AAC3B,aAAO,IAAP;AACD;;AACD,WAAO;AACLU,MAAAA,UADK;AAELT,MAAAA,qBAFK;AAGLD,MAAAA,sBAHK;AAILQ,MAAAA,aAJK;AAKL7B,MAAAA,SALK;AAMLP,MAAAA;AANK,KAAP;AAQD,GAxBD,MAwBO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASwF,sBAAT,CAAgCjE,YAAhC,EAAgE;AAC9D,QAAMkE,uBAAuB,GAAG,kCAA4BlE,YAA5B,CAAhC;AACA,MAAImE,eAAJ;;AAEA,QAAMC,kBAAkB,GAAG,CAOzBC,SAPyB,EAQzBC,SARyB,KAStB;AACH,QAAIH,eAAJ,EAAqB;AACnBA,MAAAA,eAAe,CAACf,OAAhB;AACD;;AACD,UAAMnD,kBAAkB,GAAGsD,+BAA+B,CAACc,SAAS,CAACb,MAAX,EAAmBa,SAAS,CAACZ,aAA7B,CAA1D;;AACA,QAAIxD,kBAAJ,EAAwB;AACtBkE,MAAAA,eAAe,GAAGpE,0BAA0B,CAACC,YAAD,EAAeC,kBAAf,EAAmCoE,SAAS,CAACE,eAA7C,CAA5C;AACD;;AACD,WAAOL,uBAAuB,CAACG,SAAD,EAAYC,SAAZ,CAA9B;AACD,GAlBD;;AAmBA,SAAOF,kBAAP;AACD;;eAEcH,sB","sourcesContent":["// @flow\nimport { PlaybackError } from '../types';\nimport type { FairPlayRequestFormat, PlaybackSource, VideoStreamerConfiguration } from '../types';\nimport getBasicSourceChangeHandler from '../BasicVideoStreamer/sourceChangeHandler';\nimport normalizeSource from '../common/sourceNormalizer';\n\ndeclare class Object {\n  static entries<TKey, TValue>({ [key: TKey]: TValue }): [TKey, TValue][];\n}\n\ntype LicenseAcquisitionDetails = {\n  licenseUrl: string,\n  licenseRequestHeaders?: { [string]: string },\n  fairPlayCertificateUrl: string,\n  requestFormat: FairPlayRequestFormat,\n  contentId: ?(string | number),\n  contentIdExtractMatch: ?(RegExp | string)\n};\n\nconst keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst technology = 'html';\n\nclass RequestError extends Error {\n  constructor(status: number, url: string, message: string, method: 'GET' | 'POST') {\n    super(message);\n    this.status = status;\n    this.url = url;\n    this.method = method;\n  }\n  status: number;\n  url: string;\n  method: 'GET' | 'POST';\n}\n\nfunction getRequestError(xhr, url, message, method = 'GET') {\n  return new PlaybackError(\n    'STREAM_ERROR_DOWNLOAD',\n    technology,\n    message,\n    'FATAL',\n    new RequestError(xhr.status, url, message, method)\n  );\n}\n\nfunction stringToArray(string: string) {\n  const buffer = new ArrayBuffer(string.length * 2); // 2 bytes for each char\n  const array = new Uint16Array(buffer);\n  for (let i = 0, strLen = string.length; i < strLen; i++) {\n    array[i] = string.charCodeAt(i);\n  }\n  return array;\n}\n\nfunction arrayToString(array) {\n  return String.fromCharCode.apply(null, new Uint16Array(array.buffer));\n}\n\nfunction base64DecodeUint8Array(input) {\n  const raw = window.atob(input);\n  const rawLength = raw.length;\n  const array = new Uint8Array(new ArrayBuffer(rawLength));\n  for (let i = 0; i < rawLength; i++) {\n    array[i] = raw.charCodeAt(i);\n  }\n  return array;\n}\n\nfunction base64EncodeUint8Array(input) {\n  let output = '';\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n  let i = 0;\n\n  while (i < input.length) {\n    chr1 = input[i++];\n    chr2 = i < input.length ? input[i++] : Number.NaN;\n    chr3 = i < input.length ? input[i++] : Number.NaN;\n\n    enc1 = chr1 >> 2;\n    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n    enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n    output += keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n  }\n  return output;\n}\n\nfunction extractContentId(initData, contentIdExtractMatch: ?(string | RegExp)) {\n  const url = arrayToString(initData);\n  const regex = contentIdExtractMatch\n    ? typeof contentIdExtractMatch === 'string'\n      ? new RegExp(contentIdExtractMatch)\n      : contentIdExtractMatch\n    : /([0-9]+)$/;\n  if (regex.exec) {\n    const matches = regex.exec(url);\n    return matches && matches[0];\n  }\n}\n\nfunction concatInitDataIdAndCertificate(\n  isBase64: boolean,\n  initData: Uint8Array,\n  contentId: Uint16Array | string | number,\n  cert: Uint8Array\n) {\n  if (typeof contentId === 'string') {\n    contentId = stringToArray(contentId);\n  } else if (typeof contentId === 'number') {\n    contentId = stringToArray('' + contentId);\n  }\n  // layout is [initData][4 byte: idLength][idLength byte: contentId][4 byte:certLength][certLength byte: cert]\n  let offset = 0;\n  const buffer = new ArrayBuffer(initData.byteLength + 4 + contentId.byteLength + 4 + cert.byteLength);\n  const dataView = new DataView(buffer);\n\n  const initDataArray = new Uint8Array(buffer, offset, initData.byteLength);\n  initDataArray.set(initData);\n  offset += initData.byteLength;\n\n  dataView.setUint32(offset, contentId.byteLength, true);\n  offset += 4;\n\n  const idArray = isBase64\n    ? new Uint8Array(buffer, offset, contentId.byteLength)\n    : new Uint16Array(buffer, offset, contentId.length);\n  idArray.set(contentId);\n  offset += idArray.byteLength;\n\n  dataView.setUint32(offset, cert.byteLength, true);\n  offset += 4;\n\n  const certArray = new Uint8Array(buffer, offset, cert.byteLength);\n  certArray.set(cert);\n\n  return new Uint8Array(buffer, 0, buffer.byteLength);\n}\n\nfunction formatRequestPayloadAsPostParameters(spc, contentId?: ?(string | number)) {\n  if (contentId) {\n    return (\n      'contentId=' + encodeURIComponent(contentId.toString()) + 'spc=' + encodeURIComponent(base64EncodeUint8Array(spc))\n    );\n  } else {\n    return 'spc=' + encodeURIComponent(base64EncodeUint8Array(spc));\n  }\n}\n\nconst getFairPlayLicenseAcquirer = (\n  videoElement: HTMLVideoElement,\n  acquisitionDetails: LicenseAcquisitionDetails,\n  onError: ?(PlaybackError) => void,\n  log?: (string, any) => void\n) => {\n  if (!(acquisitionDetails && 'WebKitMediaKeys' in window)) {\n    return;\n  }\n  const keySystem = 'com.apple.fps.1_0';\n  const { contentIdExtractMatch, fairPlayCertificateUrl } = acquisitionDetails;\n  const licenseRequestHeaders =\n    (acquisitionDetails.licenseRequestHeaders &&\n      Object.entries(acquisitionDetails.licenseRequestHeaders).map(([name, value]) => ({\n        name,\n        value\n      }))) ||\n    [];\n  const isBinary = acquisitionDetails.requestFormat === 'binary';\n  const isBase64 = acquisitionDetails.requestFormat === 'base64';\n  let certificate = null;\n  let { contentId, licenseUrl } = acquisitionDetails;\n\n  function onNeedKey(event: { initData: Uint8Array }) {\n    const initData = event.initData;\n    const idString = isBinary\n      ? arrayToString(initData).replace(/^.*:\\/\\//, '')\n      : contentId || extractContentId(initData, contentIdExtractMatch);\n\n    if (isBinary) {\n      log && log('Content ID extracted from initData.', contentId);\n    } else if (!contentId) {\n      log && log('Content ID extracted from initData.', contentId);\n    }\n\n    // $FlowFixMe\n    if (!videoElement.webkitKeys) {\n      // $FlowFixMe\n      videoElement.webkitSetMediaKeys(new window.WebKitMediaKeys(keySystem));\n    }\n\n    // $FlowFixMe\n    if (!videoElement.webkitKeys) {\n      handleError(\n        new PlaybackError('STREAM_ERROR_DRM_CLIENT_UNAVAILABLE', technology, 'Safari EME API not available.')\n      );\n      return;\n    }\n\n    if (!licenseUrl) {\n      const url = arrayToString(initData).substring(1);\n      licenseUrl = url.substring(url.indexOf('/', url.indexOf('://') + 3));\n    }\n    if (idString) {\n      if (certificate) {\n        if (!createKeySession(idString, concatInitDataIdAndCertificate(isBase64, initData, idString, certificate))) {\n          handleError(\n            new PlaybackError('STREAM_ERROR_DRM_CLIENT_UNAVAILABLE', technology, 'Could not create key session.')\n          );\n          return;\n        }\n      } else {\n        // load certificate\n        const request = new XMLHttpRequest();\n        request.responseType = 'arraybuffer';\n        request.addEventListener('load', () => {\n          if (request.status && request.status < 400) {\n            certificate = new Uint8Array(request.response);\n            if (createKeySession(idString, concatInitDataIdAndCertificate(isBase64, initData, idString, certificate))) {\n              handleError(\n                new PlaybackError('STREAM_ERROR_DRM_CLIENT_UNAVAILABLE', technology, 'Could not create key session.')\n              );\n              return;\n            }\n          } else {\n            handleError(getRequestError(request, fairPlayCertificateUrl, 'Download of FairPlay certificate failed.'));\n            return;\n          }\n        });\n        request.addEventListener(\n          'error',\n          () =>\n            handleError(\n              getRequestError(request, fairPlayCertificateUrl, 'Download of FairPlay certificate was blocked.')\n            ),\n          false\n        );\n        request.addEventListener(\n          'timeout',\n          () =>\n            handleError(\n              getRequestError(request, fairPlayCertificateUrl, 'Download of FairPlay certificate timed out.')\n            ),\n          false\n        );\n        request.open('GET', fairPlayCertificateUrl, true);\n        request.send();\n      }\n    } else {\n      handleError(\n        new PlaybackError(\n          'STREAM_ERROR',\n          technology,\n          'No content ID available. Cannot complete FairPlay license acquisition.',\n          'FATAL'\n        )\n      );\n    }\n  }\n\n  function createKeySession(contentId, initData) {\n    // $FlowFixMe Safari specific APIs.\n    const keySession = videoElement.webkitKeys.createSession('video/mp4', initData);\n    if (!keySession) {\n      return false;\n    }\n    keySession.contentId = contentId;\n    // keySession.licenseURL = licenseUrl;\n    keySession.addEventListener('webkitkeymessage', licenseRequestReady, false);\n    keySession.addEventListener('webkitkeyadded', onkeyadded, false);\n    keySession.addEventListener('webkitkeyerror', onkeyerror, false);\n  }\n\n  function licenseRequestReady(event) {\n    log && log('Key session ready for license request.');\n    const session = event.target;\n    const message = event.message;\n    const request = new XMLHttpRequest();\n    request.responseType = isBinary ? 'arraybuffer' : 'text';\n\n    request.addEventListener('load', () => {\n      if (request.status && request.status < 400) {\n        if (isBinary) {\n          const arrayBuffer = request.response;\n          session.update(new Uint8Array(arrayBuffer));\n        } else {\n          // response can be of the form: '\\n<ckc>base64encoded</ckc>\\n'\n          // so trim the excess:\n          let keyText = request.responseText.trim();\n          if (keyText.substr(0, 5) === '<ckc>' && keyText.substr(-6) === '</ckc>') {\n            keyText = keyText.slice(5, -6);\n          }\n          session.update(base64DecodeUint8Array(keyText));\n        }\n      } else {\n        handleError(getRequestError(request, licenseUrl, 'Acquisition of FairPlay license failed.', 'POST'));\n      }\n    });\n    request.addEventListener(\n      'error',\n      () =>\n        handleError(getRequestError(request, fairPlayCertificateUrl, 'Acquisition of FairPlay license was blocked.')),\n      false\n    );\n    request.addEventListener(\n      'timeout',\n      () => handleError(getRequestError(request, fairPlayCertificateUrl, 'Acquisition of FairPlay license timed out.')),\n      false\n    );\n\n    request.open('POST', licenseUrl, true);\n    licenseRequestHeaders.forEach(function({ name, value }) {\n      request.setRequestHeader(name, value);\n    });\n    if (isBinary) {\n      request.setRequestHeader('Content-type', 'application/octet-stream');\n      request.send(message);\n    } else if (isBase64) {\n      request.send(base64EncodeUint8Array(message));\n    } else {\n      request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n      request.send(formatRequestPayloadAsPostParameters(message, contentId));\n    }\n  }\n\n  function onkeyadded(event) {\n    log && log('Decryption key added', event);\n  }\n\n  function onkeyerror(event: any) {\n    const code = (event.target && event.target.error && event.target.error.code) || 0;\n    if (code === 6 || code === 4) {\n      const message =\n        'FairPlay blocked the playback because of non-secure output path, e.g. external VGA screen connected.';\n      handleError(\n        new PlaybackError(\n          'STREAM_ERROR_DRM_OUTPUT_BLOCKED',\n          technology,\n          message,\n          'FATAL',\n          event.target && event.target.error\n        )\n      );\n    } else {\n      handleError(\n        new PlaybackError(\n          'STREAM_ERROR_DECODE',\n          technology,\n          'Could not decrypt FairPlay stream.',\n          'FATAL',\n          event.target && event.target.error\n        )\n      );\n    }\n    cleanup();\n  }\n\n  // $FlowFixMe Safari EME specific stuff.\n  videoElement.addEventListener('webkitneedkey', onNeedKey, false);\n\n  function cleanup() {\n    // $FlowFixMe Safari EME specific stuff.\n    videoElement.removeEventListener('webkitneedkey', onNeedKey, false);\n  }\n\n  function handleError(playbackError) {\n    if (onError) {\n      onError(playbackError);\n    }\n    cleanup();\n  }\n\n  return {\n    cleanup\n  };\n};\n\nfunction hydrateLicenseAquisitionDetails(source: ?PlaybackSource, configuration: ?VideoStreamerConfiguration) {\n  const normalizedSource = normalizeSource(source);\n  if (normalizedSource && normalizedSource.licenseUrl) {\n    const licenseUrl = normalizedSource.licenseUrl;\n    const config =\n      (configuration && configuration.licenseAcquisition && configuration.licenseAcquisition.fairPlay) || {};\n    const licenseAcquisitionDetails = normalizedSource.licenseAcquisitionDetails || {};\n\n    const fairPlayCertificateUrl = licenseAcquisitionDetails.fairPlayCertificateUrl || config.serviceCertificateUrl;\n    const contentIdExtractMatch = licenseAcquisitionDetails.contentIdExtractMatch || config.contentIdExtractMatch;\n\n    const requestFormat = licenseAcquisitionDetails.fairPlayRequestFormat || config.requestFormat || 'formdata';\n    const licenseRequestHeaders = licenseAcquisitionDetails.licenseRequestHeaders;\n    const contentId = licenseAcquisitionDetails.contentId;\n\n    if (!fairPlayCertificateUrl) {\n      return null;\n    }\n    return {\n      licenseUrl,\n      licenseRequestHeaders,\n      fairPlayCertificateUrl,\n      requestFormat,\n      contentId,\n      contentIdExtractMatch\n    };\n  } else {\n    return null;\n  }\n}\n\nfunction getSourceChangeHandler(videoElement: HTMLVideoElement) {\n  const handleBasicSourceChange = getBasicSourceChangeHandler(videoElement);\n  let previousSession;\n\n  const handleSourceChange = <\n    P: {\n      source?: ?PlaybackSource,\n      configuration?: ?VideoStreamerConfiguration,\n      onPlaybackError?: PlaybackError => void\n    }\n  >(\n    nextProps: P,\n    prevProps: ?P\n  ) => {\n    if (previousSession) {\n      previousSession.cleanup();\n    }\n    const acquisitionDetails = hydrateLicenseAquisitionDetails(nextProps.source, nextProps.configuration);\n    if (acquisitionDetails) {\n      previousSession = getFairPlayLicenseAcquirer(videoElement, acquisitionDetails, nextProps.onPlaybackError);\n    }\n    return handleBasicSourceChange(nextProps, prevProps);\n  };\n  return handleSourceChange;\n}\n\nexport default getSourceChangeHandler;\n"],"file":"fairPlaySourceChangeHandler.js"}