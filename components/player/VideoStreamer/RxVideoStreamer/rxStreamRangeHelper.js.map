{"version":3,"sources":["../../../../src/replay/components/player/VideoStreamer/RxVideoStreamer/rxStreamRangeHelper.js"],"names":["dawnOfTime","Date","minimumDvrLength","defaultLiveEdgeMargin","dvrStartCorrection","getStreamRangeHelper","rxPlayer","configuration","liveMargin","liveEdgeMargin","calculateNewState","isLive","position","getPosition","getMinimumPosition","duration","getMaximumPosition","getVideoDuration","playMode","isAtLiveEdge","absolutePosition","getWallClockTime","absoluteStartPosition","adjustForDvrStartOffset","getPlayerState","seekTo","setPosition","relativePosition","isNaN","Infinity","gotoLive"],"mappings":";;;;;;AAGA,MAAMA,UAAU,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAnB;AACA,MAAMC,gBAAgB,GAAG,GAAzB,C,CAA8B;;AAC9B,MAAMC,qBAAqB,GAAG,EAA9B,C,CAAkC;;AAClC,MAAMC,kBAAkB,GAAG,EAA3B,C,CAA+B;;AAE/B,MAAMC,oBAAoB,GAAG,CAACC,QAAD,EAAgBC,aAAhB,KAAoF;AAC/G,QAAMC,UAAU,GAAID,aAAa,IAAIA,aAAa,CAACE,cAAhC,IAAmDN,qBAAtE;;AAEA,WAASO,iBAAT,GAA6B;AAC3B,UAAMC,MAAM,GAAGL,QAAQ,CAACK,MAAT,EAAf;AACA,UAAMC,QAAQ,GAAGD,MAAM,GAAGL,QAAQ,CAACO,WAAT,KAAyBP,QAAQ,CAACQ,kBAAT,EAA5B,GAA4DR,QAAQ,CAACO,WAAT,EAAnF;AACA,UAAME,QAAQ,GAAGJ,MAAM,GACnBL,QAAQ,CAACU,kBAAT,KAAgCV,QAAQ,CAACQ,kBAAT,EADb,GAEnBR,QAAQ,CAACW,gBAAT,EAFJ;AAGA,UAAMC,QAAQ,GAAGP,MAAM,GAAII,QAAQ,GAAGb,gBAAX,GAA8B,SAA9B,GAA0C,MAA9C,GAAwD,UAA/E;AACA,UAAMiB,YAAY,GAAGR,MAAM,IAAIL,QAAQ,CAACO,WAAT,KAAyBP,QAAQ,CAACU,kBAAT,KAAgCR,UAAxF;AACA,UAAMY,gBAAgB,GAAGT,MAAM,GAAG,IAAIV,IAAJ,CAASK,QAAQ,CAACe,gBAAT,KAA8B,IAAvC,CAAH,GAAkDrB,UAAjF;AACA,UAAMsB,qBAAqB,GAAGX,MAAM,GAAG,IAAIV,IAAJ,CAAS,CAACK,QAAQ,CAACe,gBAAT,KAA8BT,QAA/B,IAA2C,IAApD,CAAH,GAA+DZ,UAAnG,CAT2B,CAU3B;;AACA,WAAO;AACLY,MAAAA,QADK;AAELG,MAAAA,QAFK;AAGLG,MAAAA,QAHK;AAILC,MAAAA,YAJK;AAKLC,MAAAA,gBALK;AAMLE,MAAAA;AANK,KAAP;AAQD;;AAED,WAASC,uBAAT,GAAmC;AACjC,QAAIjB,QAAQ,CAACK,MAAT,MAAqBL,QAAQ,CAACkB,cAAT,OAA8B,QAAvD,EAAiE;AAC/D,UAAIlB,QAAQ,CAACQ,kBAAT,MAAiCR,QAAQ,CAACO,WAAT,EAArC,EAA6D;AAC3DP,QAAAA,QAAQ,CAACmB,MAAT,CAAgBnB,QAAQ,CAACQ,kBAAT,KAAgCV,kBAAhD;AACD;AACF;AACF;;AAED,WAASsB,WAAT,CAAqBC,gBAArB,EAA+C;AAC7C,QAAIrB,QAAQ,CAACkB,cAAT,OAA8B,WAA9B,IAA6C,EAAEI,KAAK,CAACD,gBAAD,CAAL,IAA2BA,gBAAgB,KAAKE,QAAlD,CAAjD,EAA8G;AAC5GvB,MAAAA,QAAQ,CAACmB,MAAT,CAAgB,CAACnB,QAAQ,CAACQ,kBAAT,MAAiC,CAAlC,IAAuCa,gBAAvD;AACD;AACF;;AAED,WAASG,QAAT,GAAoB;AAClB,QAAIxB,QAAQ,CAACK,MAAT,EAAJ,EAAuB;AACrBL,MAAAA,QAAQ,CAACmB,MAAT,CAAgBnB,QAAQ,CAACU,kBAAT,EAAhB;AACD;AACF;;AAED,SAAO;AACLO,IAAAA,uBADK;AAELb,IAAAA,iBAFK;AAGLgB,IAAAA,WAHK;AAILI,IAAAA;AAJK,GAAP;AAMD,CAlDD;;eAoDezB,oB","sourcesContent":["// @flow\nimport type { StreamRangeHelper } from '../common/types';\n\nconst dawnOfTime = new Date(0);\nconst minimumDvrLength = 100; // seconds\nconst defaultLiveEdgeMargin = 10; // seconds\nconst dvrStartCorrection = 10; // yep, seconds\n\nconst getStreamRangeHelper = (rxPlayer: any, configuration: ?{ liveEdgeMargin?: ?number }): StreamRangeHelper => {\n  const liveMargin = (configuration && configuration.liveEdgeMargin) || defaultLiveEdgeMargin;\n\n  function calculateNewState() {\n    const isLive = rxPlayer.isLive();\n    const position = isLive ? rxPlayer.getPosition() - rxPlayer.getMinimumPosition() : rxPlayer.getPosition();\n    const duration = isLive\n      ? rxPlayer.getMaximumPosition() - rxPlayer.getMinimumPosition()\n      : rxPlayer.getVideoDuration();\n    const playMode = isLive ? (duration > minimumDvrLength ? 'livedvr' : 'live') : 'ondemand';\n    const isAtLiveEdge = isLive && rxPlayer.getPosition() > rxPlayer.getMaximumPosition() - liveMargin;\n    const absolutePosition = isLive ? new Date(rxPlayer.getWallClockTime() * 1000) : dawnOfTime;\n    const absoluteStartPosition = isLive ? new Date((rxPlayer.getWallClockTime() - position) * 1000) : dawnOfTime;\n    // console.log('Minimum position %s, position %s, maximum position %s', Math.floor(rxPlayer.getMinimumPosition()), Math.floor(rxPlayer.getPosition()), Math.floor(rxPlayer.getMaximumPosition()));\n    return {\n      position,\n      duration,\n      playMode,\n      isAtLiveEdge,\n      absolutePosition,\n      absoluteStartPosition\n    };\n  }\n\n  function adjustForDvrStartOffset() {\n    if (rxPlayer.isLive() && rxPlayer.getPlayerState() === 'PAUSED') {\n      if (rxPlayer.getMinimumPosition() >= rxPlayer.getPosition()) {\n        rxPlayer.seekTo(rxPlayer.getMinimumPosition() + dvrStartCorrection);\n      }\n    }\n  }\n\n  function setPosition(relativePosition: number) {\n    if (rxPlayer.getPlayerState() !== 'RELOADING' && !(isNaN(relativePosition) && relativePosition === Infinity)) {\n      rxPlayer.seekTo((rxPlayer.getMinimumPosition() || 0) + relativePosition);\n    }\n  }\n\n  function gotoLive() {\n    if (rxPlayer.isLive()) {\n      rxPlayer.seekTo(rxPlayer.getMaximumPosition());\n    }\n  }\n\n  return {\n    adjustForDvrStartOffset,\n    calculateNewState,\n    setPosition,\n    gotoLive\n  };\n};\n\nexport default getStreamRangeHelper;\n"],"file":"rxStreamRangeHelper.js"}