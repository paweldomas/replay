{"version":3,"sources":["../../../../src/replay/components/player/VideoStreamer/ShakaVideoStreamer/shakaSetup.js"],"names":["shakaSetup","shakaLib","videoElement","configuration","window","MediaSource","isTypeSupported","shakaPlayer","Player","shakaConf","installPolyfills","polyfill","installAll","customConfiguration","configure","log","logLevel","setLevel","Level","PlaybackError","shakaCleanup","Promise","resolve","destroy"],"mappings":";;;;;;;;AAGA;;AAEO,SAASA,UAAT,CACLC,QADK,EAELC,YAFK,EAGLC,aAHK,EAIQ;AACb,MAAI,CAAC,CAACC,MAAM,CAACC,WAAT,IAAwB,CAAC,CAACA,WAAW,CAACC,eAA1C,EAA2D;AACzD,UAAMC,WAAW,GAAG,IAAIN,QAAQ,CAACO,MAAb,CAAoBN,YAApB,CAApB;;AACA,QAAIC,aAAa,IAAIA,aAAa,CAACI,WAAnC,EAAgD;AAC9C,YAAME,SAAS,GAAGN,aAAa,CAACI,WAAhC;;AACA,UAAIE,SAAS,CAACC,gBAAd,EAAgC;AAC9BT,QAAAA,QAAQ,CAACU,QAAT,CAAkBC,UAAlB;AACD;;AACD,UAAIH,SAAS,CAACI,mBAAd,EAAmC;AACjCN,QAAAA,WAAW,CAACO,SAAZ,CAAsBL,SAAS,CAACI,mBAAhC;AACD;AACF;;AACD,UAAME,GAAG,GAAGd,QAAQ,CAACc,GAAT,IAAgBd,QAAQ,CAACc,GAArC;AACA,UAAMC,QAAQ,GAAGb,aAAa,IAAIA,aAAa,CAACa,QAAhD;;AACA,QAAIA,QAAQ,IAAI,IAAZ,IAAoBD,GAAxB,EAA6B;AAC3B,UAAIC,QAAQ,KAAK,SAAjB,EAA4B;AAC1BD,QAAAA,GAAG,CAACE,QAAJ,CAAaF,GAAG,CAACG,KAAJ,CAAU,IAAV,CAAb;AACD,OAFD,MAEO;AACLH,QAAAA,GAAG,CAACE,QAAJ,CAAaF,GAAG,CAACG,KAAJ,CAAUF,QAAV,CAAb;AACD;AACF;;AACD,WAAOT,WAAP;AACD,GArBD,MAqBO;AACL,UAAM,IAAIY,oBAAJ,CACJ,qCADI,EAEJ,OAFI,EAGJ,wEAHI,CAAN;AAKD;AACF;;AAEM,SAASC,YAAT,CAAsBb,WAAtB,EAAgD;AACrD,SAAOc,OAAO,CAACC,OAAR,CAAgBf,WAAW,IAAIA,WAAW,CAACgB,OAAZ,EAA/B,CAAP;AACD","sourcesContent":["// @flow\nimport type { Shaka, ShakaPlayer } from './types';\nimport type { ShakaVideoStreamerConfiguration } from './ShakaVideoStreamer';\nimport { PlaybackError } from '../types';\n\nexport function shakaSetup(\n  shakaLib: Shaka,\n  videoElement: HTMLVideoElement,\n  configuration: ?ShakaVideoStreamerConfiguration\n): ShakaPlayer {\n  if (!!window.MediaSource && !!MediaSource.isTypeSupported) {\n    const shakaPlayer = new shakaLib.Player(videoElement);\n    if (configuration && configuration.shakaPlayer) {\n      const shakaConf = configuration.shakaPlayer;\n      if (shakaConf.installPolyfills) {\n        shakaLib.polyfill.installAll();\n      }\n      if (shakaConf.customConfiguration) {\n        shakaPlayer.configure(shakaConf.customConfiguration);\n      }\n    }\n    const log = shakaLib.log && shakaLib.log;\n    const logLevel = configuration && configuration.logLevel;\n    if (logLevel != null && log) {\n      if (logLevel === 'VERBOSE') {\n        log.setLevel(log.Level['V2']);\n      } else {\n        log.setLevel(log.Level[logLevel]);\n      }\n    }\n    return shakaPlayer;\n  } else {\n    throw new PlaybackError(\n      'STREAM_ERROR_TECHNOLOGY_UNSUPPORTED',\n      'shaka',\n      'MPEG-DASH playback with Shaka Player is not supported in this browser.'\n    );\n  }\n}\n\nexport function shakaCleanup(shakaPlayer: ShakaPlayer) {\n  return Promise.resolve(shakaPlayer && shakaPlayer.destroy());\n}\n"],"file":"shakaSetup.js"}