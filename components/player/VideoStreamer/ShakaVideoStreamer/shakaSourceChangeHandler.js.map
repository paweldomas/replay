{"version":3,"sources":["../../../../src/replay/components/player/VideoStreamer/ShakaVideoStreamer/shakaSourceChangeHandler.js"],"names":["widevine","playready","getEmeAttributes","userAgent","serviceCertificate","test","audioRobustness","videoRobustness","_classification","addLicenseRequestFilters","shakaLib","shakaPlayer","licenseRequestHeaders","getNetworkingEngine","registerRequestFilter","type","request","net","NetworkingEngine","RequestType","LICENSE","Object","entries","forEach","key","value","headers","prepareDrm","source","configuration","licenseUrl","drmType","details","licenseAcquisitionDetails","drmConfig","licenseAcquisition","widevineServiceCertificateUrl","serviceCertificateUrl","widevineEmeAttributes","navigator","robustness","widevineRobustness","audio","video","playreadyRobustness","playReady","keys","length","servers","configure","drm","advanced","serverCertificate","Promise","resolve","prepareFilters","shakaRequestFilter","shakaResponseFilter","networkingEngine","clearAllRequestFilters","clearAllResponseFilters","registerResponseFilter","getSourceChangeHandler","nextProps","prevProps","then","load","streamUrl","startPosition","catch","err","code","util","Error","Code","LOAD_INTERRUPTED","document","location","unload"],"mappings":"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","sourcesContent":["// @flow\nimport type { AdvancedPlaybackSource, PlaybackSource, VideoStreamerConfiguration } from '../types';\nimport type { Shaka, ShakaPlayer, ShakaRequestFilter, ShakaResponseFilter } from './types';\nimport mapShakaError from './shakaErrorMapper';\nimport normalizeSource from '../common/sourceNormalizer';\n\ndeclare class Object {\n  static entries<TKey, TValue>({ [key: TKey]: TValue }): [TKey, TValue][];\n}\n\nconst widevine = 'com.widevine.alpha';\nconst playready = 'com.microsoft.playready';\n\ntype Props<C: VideoStreamerConfiguration> = {\n  source?: ?PlaybackSource,\n  shakaRequestFilter?: ?ShakaRequestFilter,\n  shakaResponseFilter?: ?ShakaResponseFilter,\n  configuration?: ?C\n};\n\nfunction getEmeAttributes(userAgent, serviceCertificate) {\n  // For now, only deals with Chrome and Android Chrome distinctions.\n  if (/Android(.*)Chrome/.test(userAgent)) {\n    // Lowest level, SW_SECURE_CRYPTO, also for video.\n    return {\n      audioRobustness: 'SW_SECURE_CRYPTO',\n      videoRobustness: 'SW_SECURE_CRYPTO',\n      serviceCertificate: serviceCertificate,\n      _classification: 'Android Chrome 58 and newer'\n    };\n  } else {\n    return {\n      audioRobustness: 'SW_SECURE_CRYPTO',\n      videoRobustness: 'SW_SECURE_DECODE',\n      serviceCertificate: serviceCertificate,\n      _classification: 'Desktop'\n    };\n  }\n}\n\nfunction addLicenseRequestFilters(\n  shakaLib: Shaka,\n  shakaPlayer: ShakaPlayer,\n  licenseRequestHeaders: { [string]: string }\n) {\n  shakaPlayer.getNetworkingEngine().registerRequestFilter((type: string, request) => {\n    if (type === shakaLib.net.NetworkingEngine.RequestType.LICENSE) {\n      Object.entries(licenseRequestHeaders).forEach(([key: string, value: string]) => {\n        request.headers[key] = value;\n      });\n    }\n  });\n}\n\nfunction prepareDrm(\n  shakaLib: Shaka,\n  shakaPlayer: ShakaPlayer,\n  source: AdvancedPlaybackSource,\n  configuration: ?VideoStreamerConfiguration\n) {\n  const licenseUrl = source.licenseUrl;\n  const drmType = source.drmType;\n  const details = source.licenseAcquisitionDetails || {};\n  const drmConfig = (configuration && configuration.licenseAcquisition) || {};\n  const serviceCertificate =\n    details.widevineServiceCertificateUrl || (drmConfig.widevine && drmConfig.widevine.serviceCertificateUrl);\n\n  const widevineEmeAttributes = getEmeAttributes(navigator.userAgent, serviceCertificate);\n  const { licenseRequestHeaders, robustness } = details;\n  const widevineRobustness =\n    robustness && robustness[widevine]\n      ? {\n          audioRobustness: robustness[widevine].audio,\n          videoRobustness: robustness[widevine].video\n        }\n      : drmConfig.widevine && drmConfig.widevine.robustness\n      ? {\n          audioRobustness: drmConfig.widevine.robustness.audio,\n          videoRobustness: drmConfig.widevine.robustness.video\n        }\n      : {\n          audioRobustness: widevineEmeAttributes.audioRobustness,\n          videoRobustness: widevineEmeAttributes.videoRobustness\n        };\n  const playreadyRobustness =\n    robustness && robustness[playready]\n      ? {\n          audioRobustness: robustness[playready].audio,\n          videoRobustness: robustness[playready].video\n        }\n      : drmConfig.playReady && drmConfig.playReady.robustness\n      ? {\n          audioRobustness: drmConfig.playReady.robustness.audio,\n          videoRobustness: drmConfig.playReady.robustness.video\n        }\n      : {\n          videoRobustness: 'SW_SECURE_DECODE',\n          audioRobustness: 'SW_SECURE_CRYPTO'\n        };\n\n  if (licenseRequestHeaders && Object.keys(licenseRequestHeaders).length > 0) {\n    addLicenseRequestFilters(shakaLib, shakaPlayer, licenseRequestHeaders);\n  }\n  const servers = drmType\n    ? { [drmType]: licenseUrl }\n    : {\n        [widevine]: licenseUrl,\n        [playready]: licenseUrl\n      };\n\n  shakaPlayer.configure({\n    drm: {\n      servers,\n      advanced: {\n        'com.widevine.alpha': {\n          ...widevineRobustness,\n          serverCertificate: widevineEmeAttributes.serviceCertificate\n        },\n        'com.microsoft.playready': playreadyRobustness\n      }\n    }\n  });\n  return Promise.resolve();\n}\n\nfunction prepareFilters(\n  shakaPlayer: ShakaPlayer,\n  shakaRequestFilter: ?ShakaRequestFilter,\n  shakaResponseFilter: ?ShakaResponseFilter\n) {\n  const networkingEngine = shakaPlayer.getNetworkingEngine();\n  if (networkingEngine) {\n    networkingEngine.clearAllRequestFilters();\n    networkingEngine.clearAllResponseFilters();\n    if (shakaRequestFilter) {\n      networkingEngine.registerRequestFilter(shakaRequestFilter);\n    }\n    if (shakaResponseFilter) {\n      networkingEngine.registerResponseFilter(shakaResponseFilter);\n    }\n  }\n  // To be leaved for plugging in: Credentials, request headers, license request headers, manifest modification, manifest corrections.\n  return Promise.resolve();\n}\n\nconst getSourceChangeHandler = (shakaLib: Shaka, shakaPlayer: ShakaPlayer) => <\n  C: VideoStreamerConfiguration,\n  P: Props<C>\n>(\n  nextProps: P,\n  prevProps?: P\n): Promise<any> => {\n  const { shakaRequestFilter, shakaResponseFilter } = nextProps;\n  const source = normalizeSource(nextProps.source);\n  if (source) {\n    return prepareFilters(shakaPlayer, shakaRequestFilter, shakaResponseFilter)\n      .then(() => prepareDrm(shakaLib, shakaPlayer, source, nextProps.configuration))\n      .then(() => shakaPlayer.load(source.streamUrl, source.startPosition))\n      .catch(err => {\n        if (err && err.code !== shakaLib.util.Error.Code.LOAD_INTERRUPTED) {\n          throw mapShakaError(shakaLib, false, err, navigator.userAgent, document.location);\n        }\n      });\n  } else if (prevProps && prevProps.source) {\n    // And no new source.\n    const networkingEngine = shakaPlayer.getNetworkingEngine();\n    networkingEngine.clearAllRequestFilters();\n    networkingEngine.clearAllResponseFilters();\n    return shakaPlayer.unload();\n  } else {\n    return Promise.resolve();\n  }\n};\n\nexport default getSourceChangeHandler;\n"],"file":"shakaSourceChangeHandler.js"}