{"version":3,"sources":["../../../../src/replay/components/player/VideoStreamer/common/renderers.js"],"names":["createTrackElement","src","srclang","kind","label","onRef","renderWithoutSource","videoRef","videoElementEventHandlers","props","baseClassName","playsInline","textTracks","style","className","classNamePrefix","classNames","Array","isArray","map","renderWithSource","source","streamUrl"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;AAGA,MAAMA,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA;AAA7B,CAAD;AAAA;AACzB;AACA;AAAO,EAAA,GAAG,EAAEJ,GAAG,IAAIG,KAAK,IAAI,EAAb,CAAf;AAAiC,EAAA,IAAI,EAAED,IAAvC;AAA6C,EAAA,GAAG,EAAEF,GAAlD;AAAuD,EAAA,OAAO,EAAEC,OAAhE;AAAyE,EAAA,KAAK,EAAEE,KAAhF;AAAuF,EAAA,GAAG,EAAEC;AAA5F,EAFF;;AAKO,MAAMC,mBAA0C,GAAG,CACxDC,QADwD,EAExDC,yBAFwD,EAGxDC,KAHwD,EAIxDC,aAJwD,EAKxDC,WALwD,EAMxDC,UANwD,EAOxDC,KAPwD,KAQrD;AAAA,QACKC,SADL,GACoCL,KADpC,CACKK,SADL;AAAA,QACgBC,eADhB,GACoCN,KADpC,CACgBM,eADhB;AAEH,QAAMC,UAAU,GAAG,8BAAiBD,eAAjB,EAAkCL,aAAlC,EAAiDI,SAAjD,CAAnB;AACA,sBACE;AACE,IAAA,QAAQ,EAAE,IADZ;AAEE,IAAA,QAAQ,EAAE,KAFZ;AAGE,IAAA,KAAK,EAAED,KAHT;AAIE,IAAA,SAAS,EAAEG,UAJb;AAKE,IAAA,GAAG,EAAET,QALP;AAME,IAAA,WAAW,EAAEI;AANf,KAOMH,yBAPN,GAQGS,KAAK,CAACC,OAAN,CAAcN,UAAd,KAA6BA,UAAU,CAACO,GAAX,CAAenB,kBAAf,CARhC,CADF;AAYD,CAvBM;;;;AAyBA,MAAMoB,gBAAuC,GAAG,CACrDb,QADqD,EAErDC,yBAFqD,EAGrDC,KAHqD,EAIrDC,aAJqD,EAKrDC,WALqD,EAMrDC,UANqD,EAOrDC,KAPqD,KAQlD;AAAA,QACKC,SADL,GAC4CL,KAD5C,CACKK,SADL;AAAA,QACgBC,eADhB,GAC4CN,KAD5C,CACgBM,eADhB;AAAA,QACiCM,MADjC,GAC4CZ,KAD5C,CACiCY,MADjC;AAEH,QAAML,UAAU,GAAG,8BAAiBD,eAAjB,EAAkCL,aAAlC,EAAiDI,SAAjD,CAAnB;AACA,QAAMQ,SAAS,GAAGD,MAAM,KAAK,OAAOA,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCA,MAAM,CAACC,SAAlD,CAAxB;;AACA,MAAIA,SAAJ,EAAe;AACb,wBACE;AACE,MAAA,QAAQ,EAAE,IADZ;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,KAAK,EAAET,KAHT;AAIE,MAAA,SAAS,EAAEG,UAJb;AAKE,MAAA,GAAG,EAAEM,SALP;AAME,MAAA,GAAG,EAAEf,QANP;AAOE,MAAA,WAAW,EAAEI;AAPf,OAQMH,yBARN,GASGS,KAAK,CAACC,OAAN,CAAcN,UAAd,KAA6BA,UAAU,CAACO,GAAX,CAAenB,kBAAf,CAThC,CADF;AAaD,GAdD,MAcO;AACL,wBAAO;AAAO,MAAA,SAAS,EAAEgB,UAAlB;AAA8B,MAAA,GAAG,EAAET,QAAnC;AAA6C,MAAA,GAAG,EAAE,EAAlD;AAAsD,MAAA,QAAQ,EAAE,KAAhE;AAAuE,MAAA,KAAK,EAAEM;AAA9E,MAAP;AACD;AACF,CA7BM","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { prefixClassNames } from '../../../common';\nimport type { TrackElementData, VideoStreamerRenderer } from './types';\n\nconst createTrackElement = ({ src, srclang, kind, label, onRef }: TrackElementData) => (\n  // $FlowFixMe. ref doesn't accept HTMLTrackElement as subtype to HTMLElement.\n  <track key={src + (label || '')} kind={kind} src={src} srcLang={srclang} label={label} ref={onRef} />\n);\n\nexport const renderWithoutSource: VideoStreamerRenderer = (\n  videoRef,\n  videoElementEventHandlers,\n  props,\n  baseClassName,\n  playsInline,\n  textTracks,\n  style\n) => {\n  const { className, classNamePrefix } = props;\n  const classNames = prefixClassNames(classNamePrefix, baseClassName, className);\n  return (\n    <video\n      autoPlay={true}\n      controls={false}\n      style={style}\n      className={classNames}\n      ref={videoRef}\n      playsInline={playsInline}\n      {...videoElementEventHandlers}>\n      {Array.isArray(textTracks) && textTracks.map(createTrackElement)}\n    </video>\n  );\n};\n\nexport const renderWithSource: VideoStreamerRenderer = (\n  videoRef,\n  videoElementEventHandlers,\n  props,\n  baseClassName,\n  playsInline,\n  textTracks,\n  style\n) => {\n  const { className, classNamePrefix, source } = props;\n  const classNames = prefixClassNames(classNamePrefix, baseClassName, className);\n  const streamUrl = source && (typeof source === 'string' ? source : source.streamUrl);\n  if (streamUrl) {\n    return (\n      <video\n        autoPlay={true}\n        controls={false}\n        style={style}\n        className={classNames}\n        src={streamUrl}\n        ref={videoRef}\n        playsInline={playsInline}\n        {...videoElementEventHandlers}>\n        {Array.isArray(textTracks) && textTracks.map(createTrackElement)}\n      </video>\n    );\n  } else {\n    return <video className={classNames} ref={videoRef} src={''} controls={false} style={style} />;\n  }\n};\n"],"file":"renderers.js"}