{"version":3,"sources":["../../../src/replay/components/player/containment-helpers/AspectRatio.js"],"names":["outerStyle","position","maxHeight","helperStyle","display","width","paddingTop","pointerEvents","getHelperStyle","aspectRatio","vertical","horizontal","toFixed","AspectRatio","render","rootClassName","aspectFixClassName","classNamePrefix","defaultClassNamePrefix","beforeStyle"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAaA,MAAMA,UAAU,GAAG;AAAEC,EAAAA,QAAQ,EAAE,UAAZ;AAAwBC,EAAAA,SAAS,EAAE;AAAnC,CAAnB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE,OADS;AAElBC,EAAAA,KAAK,EAAE,MAFW;AAGlBC,EAAAA,UAAU,EAAE,QAHM;AAIlBC,EAAAA,aAAa,EAAE;AAJG,CAApB;AAOA,MAAMC,cAAc,GAAG,yBAAQC,WAAW,IACxCA,WAAW,qBACFN,WADE;AACWG,EAAAA,UAAU,EAAE,CAAEG,WAAW,CAACC,QAAZ,GAAuB,GAAxB,GAA+BD,WAAW,CAACE,UAA5C,EAAwDC,OAAxD,CAAgE,CAAhE,IAAqE;AAD5F,KAEPT,WAHiB,CAAvB;;AAMA,MAAMU,WAAW,GAAG,CAAC;AACnBJ,EAAAA,WADmB;AAEnBK,EAAAA,MAFmB;AAGnBC,EAAAA,aAAa,GAAG,EAHG;AAInBC,EAAAA,kBAJmB;AAKnBC,EAAAA,eAAe,GAAGC;AALC,CAAD,KAMP;AACX,MAAIF,kBAAJ,EAAwB;AACtB,wBACE;AAAK,MAAA,SAAS,YAAKD,aAAL,cAAsB,8BAAiBE,eAAjB,EAAkCD,kBAAlC,CAAtB;AAAd,OAA8FF,MAAM,EAApG,CADF;AAGD,GAJD,MAIO;AACL,UAAMK,WAAW,GAAGX,cAAc,CAACC,WAAD,CAAlC;AACA,wBACE;AAAK,MAAA,SAAS,EAAEM,aAAhB;AAA+B,MAAA,KAAK,EAAEf;AAAtC,oBACE;AAAK,MAAA,KAAK,EAAEmB;AAAZ,MADF,EAEGL,MAAM,EAFT,CADF;AAMD;AACF,CApBD;;eAsBeD,W","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { defaultClassNamePrefix, prefixClassNames } from '../../common';\nimport memoize from 'memoize-one';\n\ntype Props = {\n  aspectRatio?: {\n    horizontal: number,\n    vertical: number\n  },\n  classNamePrefix?: string,\n  aspectFixClassName?: ?string,\n  render: () => React.Node,\n  rootClassName?: string\n};\n\nconst outerStyle = { position: 'relative', maxHeight: '100vh' };\n\nconst helperStyle = {\n  display: 'block',\n  width: '100%',\n  paddingTop: '56.25%',\n  pointerEvents: 'none'\n};\n\nconst getHelperStyle = memoize(aspectRatio =>\n  aspectRatio\n    ? { ...helperStyle, paddingTop: ((aspectRatio.vertical * 100) / aspectRatio.horizontal).toFixed(2) + '%' }\n    : helperStyle\n);\n\nconst AspectRatio = ({\n  aspectRatio,\n  render,\n  rootClassName = '',\n  aspectFixClassName,\n  classNamePrefix = defaultClassNamePrefix\n}: Props) => {\n  if (aspectFixClassName) {\n    return (\n      <div className={`${rootClassName} ${prefixClassNames(classNamePrefix, aspectFixClassName)}`}>{render()}</div>\n    );\n  } else {\n    const beforeStyle = getHelperStyle(aspectRatio);\n    return (\n      <div className={rootClassName} style={outerStyle}>\n        <div style={beforeStyle} />\n        {render()}\n      </div>\n    );\n  }\n};\n\nexport default AspectRatio;\n"],"file":"AspectRatio.js"}