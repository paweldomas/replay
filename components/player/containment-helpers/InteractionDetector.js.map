{"version":3,"sources":["../../../src/replay/components/player/containment-helpers/InteractionDetector.js"],"names":["getDelaySeconds","configuration","interactionDetector","inactivityDelay","InteractionDetector","React","Component","constructor","props","isMouseMoved","isTouched","isTouching","isEntered","clientX","clientY","evt","flags","isFixed","setState","isUserActive","focusEvent","target","currentTarget","nudge","state","clearTimeout","inactivityTimeoutId","setTimeout","setInactive","componentDidMount","delaySeconds","intervalId","setInterval","updateActivity","componentDidUpdate","prevProps","prevState","clearInterval","componentWillUnmount","render","handleMouseMove","handleTouchStart","handleTouchEnd","handleFocus","toggleFixedUserActive"],"mappings":";;;;;;;AACA;;;;;;;;AAoCA,MAAMA,eAAe,GAAGC,aAAa,IACnCA,aAAa,IAAIA,aAAa,CAACC,mBAA/B,IAAsDD,aAAa,CAACC,mBAAd,CAAkCC,eAAlC,IAAqD,IAA3G,GACIF,aAAa,CAACC,mBAAd,CAAkCC,eADtC,GAEI,CAHN;;AAKA,MAAMC,mBAAN,SAAkCC,KAAK,CAACC,SAAxC,CAAgE;AAC9DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;;AADwB,qCAKP,KALO;;AAAA;;AAAA;;AAAA,mCAQA;AACxBC,MAAAA,YAAY,EAAE,IADU;AAExBC,MAAAA,SAAS,EAAE,KAFa;AAGxBC,MAAAA,UAAU,EAAE,KAHY;AAIxBC,MAAAA,SAAS,EAAE,KAJa;AAKxBC,MAAAA,OAAO,EAAE,CAAC,CALc;AAMxBC,MAAAA,OAAO,EAAE,CAAC;AANc,KARA;;AAAA,6CAiDPC,GAAD,IAAqB;AACrC,UAAIA,GAAG,CAACF,OAAJ,KAAgB,KAAKG,KAAL,CAAWH,OAA3B,IAAsCE,GAAG,CAACD,OAAJ,KAAgB,KAAKE,KAAL,CAAWF,OAArE,EAA8E;AAC5E,aAAKE,KAAL,CAAWP,YAAX,GAA0B,IAA1B;AACA,aAAKO,KAAL,CAAWH,OAAX,GAAqBE,GAAG,CAACF,OAAzB;AACA,aAAKG,KAAL,CAAWF,OAAX,GAAqBC,GAAG,CAACD,OAAzB;AACD;AACF,KAvDyB;;AAAA,8CAyDP,MAAM;AACvB,WAAKE,KAAL,CAAWN,SAAX,GAAuB,IAAvB;AACA,WAAKM,KAAL,CAAWL,UAAX,GAAwB,IAAxB;AACD,KA5DyB;;AAAA,4CA8DT,MAAM;AACrB,WAAKK,KAAL,CAAWL,UAAX,GAAwB,KAAxB;AACD,KAhEyB;;AAAA,mCAkElB,MAAM;AACZ,WAAKK,KAAL,CAAWP,YAAX,GAA0B,IAA1B;AACD,KApEyB;;AAAA,mDAsEF,MAAM;AAC5B,WAAKQ,OAAL,GAAe,CAAC,KAAKA,OAArB;;AACA,UAAI,KAAKA,OAAT,EAAkB;AAChB,aAAKD,KAAL,CAAWP,YAAX,GAA0B,IAA1B;AACD,OAFD,MAEO;AACL,aAAKS,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD;AACF,KA7EyB;;AAAA,yCA+EXC,UAAD,IAA4B;AACxC,UAAIA,UAAU,CAACC,MAAX,KAAsBD,UAAU,CAACE,aAArC,EAAoD;AAClD,aAAKC,KAAL;AACD;AACF,KAnFyB;;AAAA,yCAqFZ,MAAM;AAClB,UAAI,EAAE,KAAKN,OAAL,IAAgB,KAAKD,KAAL,CAAWP,YAA7B,CAAJ,EAAgD;AAC9C,aAAKS,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD;AACF,KAzFyB;;AAAA,4CA2FT,MAAM;AACrB,UAAI,KAAKH,KAAL,CAAWP,YAAX,IAA2B,KAAKO,KAAL,CAAWN,SAAtC,IAAmD,KAAKM,KAAL,CAAWL,UAAlE,EAA8E;AAC5E,aAAKK,KAAL,CAAWN,SAAX,GAAuB,KAAvB;AACA,aAAKM,KAAL,CAAWP,YAAX,GAA0B,KAA1B;;AACA,YAAI,CAAC,KAAKe,KAAL,CAAWL,YAAhB,EAA8B;AAC5B,eAAKD,QAAL,CAAc;AAAEC,YAAAA,YAAY,EAAE;AAAhB,WAAd;AACD;;AACDM,QAAAA,YAAY,CAAC,KAAKC,mBAAN,CAAZ;AACA,aAAKA,mBAAL,GAA2BC,UAAU,CAAC,KAAKC,WAAN,EAAmB5B,eAAe,CAAC,KAAKQ,KAAL,CAAWP,aAAZ,CAAf,GAA4C,IAA/D,CAArC;AACD;AACF,KArGyB;;AAExB,SAAKuB,KAAL,GAAa;AAAEL,MAAAA,YAAY,EAAE;AAAhB,KAAb;AACD;;AAcDU,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,YAAY,GAAG9B,eAAe,CAAC,KAAKQ,KAAL,CAAWP,aAAZ,CAApC;;AACA,QAAI6B,YAAY,IAAI,CAApB,EAAuB;AACrB;AACA,WAAKC,UAAL,GAAkBC,WAAW,CAAC,KAAKC,cAAN,EAAsB,GAAtB,CAA7B,CAFqB,CAEoC;AAC1D;AACF;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAmBC,SAAnB,EAAqC;AACrD,UAAMN,YAAY,GAAG9B,eAAe,CAAC,KAAKQ,KAAL,CAAWP,aAAZ,CAApC;;AACA,QAAI6B,YAAY,KAAK9B,eAAe,CAACmC,SAAS,CAAClC,aAAX,CAApC,EAA+D;AAC7D,UAAI,KAAK8B,UAAT,EAAqB;AACnBM,QAAAA,aAAa,CAAC,KAAKN,UAAN,CAAb;AACD;;AACD,UAAID,YAAY,IAAI,CAApB,EAAuB;AACrB;AACA,aAAKC,UAAL,GAAkBC,WAAW,CAAC,KAAKC,cAAN,EAAsB,GAAtB,CAA7B,CAFqB,CAEoC;AAC1D,OAHD,MAGO;AACL,aAAKf,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD;AACF;AACF;;AAEDmB,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKP,UAAT,EAAqB;AACnBM,MAAAA,aAAa,CAAC,KAAKN,UAAN,CAAb;AACD;;AACD,QAAI,KAAKL,mBAAT,EAA8B;AAC5BD,MAAAA,YAAY,CAAC,KAAKC,mBAAN,CAAZ;AACD;AACF;;AAwDDa,EAAAA,MAAM,GAAG;AAAA,UACCpB,YADD,GACkB,KAAKK,KADvB,CACCL,YADD;AAAA,UAECoB,MAFD,GAEY,KAAK/B,KAFjB,CAEC+B,MAFD;AAAA,UAGCC,eAHD,GAGkG,IAHlG,CAGCA,eAHD;AAAA,UAGkBC,gBAHlB,GAGkG,IAHlG,CAGkBA,gBAHlB;AAAA,UAGoCC,cAHpC,GAGkG,IAHlG,CAGoCA,cAHpC;AAAA,UAGoDC,WAHpD,GAGkG,IAHlG,CAGoDA,WAHpD;AAAA,UAGiEC,qBAHjE,GAGkG,IAHlG,CAGiEA,qBAHjE;AAAA,UAGwFrB,KAHxF,GAGkG,IAHlG,CAGwFA,KAHxF;AAIP,WAAOgB,MAAM,CAAC;AACZpB,MAAAA,YADY;AAEZqB,MAAAA,eAFY;AAGZC,MAAAA,gBAHY;AAIZC,MAAAA,cAJY;AAKZC,MAAAA,WALY;AAMZC,MAAAA,qBAAqB,EAAEA,qBANX;AAOZrB,MAAAA;AAPY,KAAD,CAAb;AASD;;AArH6D;;eAwHjDnB,mB","sourcesContent":["// @flow\nimport * as React from 'react';\n\ntype RenderParameters = {\n  isUserActive: boolean,\n  nudge: () => void,\n  toggleFixedUserActive: () => void,\n  handleMouseMove: (evt: MouseEvent) => void,\n  handleFocus: (evt: FocusEvent) => void,\n  handleTouchStart: (evt: TouchEvent) => void,\n  handleTouchEnd: (evt: TouchEvent) => void\n};\n\nexport type InteractionDetectorConfiguration = {\n  inactivityDelay: number\n};\n\ntype Props = {\n  configuration?: {\n    interactionDetector?: InteractionDetectorConfiguration\n  },\n  render: RenderParameters => React.Node\n};\n\ntype State = {\n  isUserActive: boolean\n};\n\ntype InteractionState = {\n  isMouseMoved: boolean,\n  isTouched: boolean,\n  isTouching: boolean,\n  isEntered: boolean,\n  clientX: number,\n  clientY: number\n};\n\nconst getDelaySeconds = configuration =>\n  configuration && configuration.interactionDetector && configuration.interactionDetector.inactivityDelay != null\n    ? configuration.interactionDetector.inactivityDelay\n    : 0;\n\nclass InteractionDetector extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { isUserActive: true };\n  }\n\n  isFixed: boolean = false;\n  intervalId: IntervalID;\n  inactivityTimeoutId: TimeoutID;\n  flags: InteractionState = {\n    isMouseMoved: true,\n    isTouched: false,\n    isTouching: false,\n    isEntered: false,\n    clientX: -1,\n    clientY: -1\n  };\n\n  componentDidMount() {\n    const delaySeconds = getDelaySeconds(this.props.configuration);\n    if (delaySeconds >= 0) {\n      // Negative values deactivate\n      this.intervalId = setInterval(this.updateActivity, 250); // This interval is not the inactivity delay.\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const delaySeconds = getDelaySeconds(this.props.configuration);\n    if (delaySeconds !== getDelaySeconds(prevProps.configuration)) {\n      if (this.intervalId) {\n        clearInterval(this.intervalId);\n      }\n      if (delaySeconds >= 0) {\n        // Negative values deactivate\n        this.intervalId = setInterval(this.updateActivity, 250); // This interval is not the inactivity delay.\n      } else {\n        this.setState({ isUserActive: true });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n    if (this.inactivityTimeoutId) {\n      clearTimeout(this.inactivityTimeoutId);\n    }\n  }\n\n  handleMouseMove = (evt: MouseEvent) => {\n    if (evt.clientX !== this.flags.clientX || evt.clientY !== this.flags.clientY) {\n      this.flags.isMouseMoved = true;\n      this.flags.clientX = evt.clientX;\n      this.flags.clientY = evt.clientY;\n    }\n  };\n\n  handleTouchStart = () => {\n    this.flags.isTouched = true;\n    this.flags.isTouching = true;\n  };\n\n  handleTouchEnd = () => {\n    this.flags.isTouching = false;\n  };\n\n  nudge = () => {\n    this.flags.isMouseMoved = true;\n  };\n\n  toggleFixedUserActive = () => {\n    this.isFixed = !this.isFixed;\n    if (this.isFixed) {\n      this.flags.isMouseMoved = true;\n    } else {\n      this.setState({ isUserActive: false });\n    }\n  };\n\n  handleFocus = (focusEvent: FocusEvent) => {\n    if (focusEvent.target === focusEvent.currentTarget) {\n      this.nudge();\n    }\n  };\n\n  setInactive = () => {\n    if (!(this.isFixed || this.flags.isMouseMoved)) {\n      this.setState({ isUserActive: false });\n    }\n  };\n\n  updateActivity = () => {\n    if (this.flags.isMouseMoved || this.flags.isTouched || this.flags.isTouching) {\n      this.flags.isTouched = false;\n      this.flags.isMouseMoved = false;\n      if (!this.state.isUserActive) {\n        this.setState({ isUserActive: true });\n      }\n      clearTimeout(this.inactivityTimeoutId);\n      this.inactivityTimeoutId = setTimeout(this.setInactive, getDelaySeconds(this.props.configuration) * 1000);\n    }\n  };\n\n  render() {\n    const { isUserActive } = this.state;\n    const { render } = this.props;\n    const { handleMouseMove, handleTouchStart, handleTouchEnd, handleFocus, toggleFixedUserActive, nudge } = this;\n    return render({\n      isUserActive,\n      handleMouseMove,\n      handleTouchStart,\n      handleTouchEnd,\n      handleFocus,\n      toggleFixedUserActive: toggleFixedUserActive,\n      nudge\n    });\n  }\n}\n\nexport default InteractionDetector;\n"],"file":"InteractionDetector.js"}