{"version":3,"sources":["../../../../src/replay/components/player/containment-helpers/ponyfills/crossBrowserFullscreen.js"],"names":["getFullscreenElement","document","fullScreenElement","fullscreenElement","webkitFullscreenElement","webkitFullScreenElement","mozFullScreenElement","msFullscreenElement","enterFullscreen","element","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","webkitRequestFullScreen","navigator","userAgent","match","getElementsByTagName","webkitEnterFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","webkitExitFullScreen","msExitFullscreen","notifyFullscreenChange","handler","fullscreenEventNames","forEach","eventName","addEventListener","removeEventListener"],"mappings":";;;;;;;;;;AAAO,SAASA,oBAAT,GAAgC;AACrC;AACA,SACEC,QAAQ,CAACC,iBAAT,IACAD,QAAQ,CAACE,iBADT,IAEAF,QAAQ,CAACG,uBAFT,IAGAH,QAAQ,CAACI,uBAHT,IAIAJ,QAAQ,CAACK,oBAJT,IAKAL,QAAQ,CAACM,mBANX;AAQD;;AAEM,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AACvC,MAAIA,OAAO,CAACC,iBAAZ,EAA+B;AAC7BD,IAAAA,OAAO,CAACC,iBAAR;AACA,WAAO,IAAP;AACD,GAHD,MAGO,IAAID,OAAO,CAACE,oBAAZ,EAAkC;AACvCF,IAAAA,OAAO,CAACE,oBAAR;AACA,WAAO,IAAP;AACD,GAHM,MAGA,IAAIF,OAAO,CAACG,mBAAZ,EAAiC;AACtCH,IAAAA,OAAO,CAACG,mBAAR;AACA,WAAO,IAAP;AACD,GAHM,MAGA,IAAIH,OAAO,CAACI,uBAAZ,EAAqC;AAC1CJ,IAAAA,OAAO,CAACI,uBAAR,CAAgCC,OAAO,CAACC,oBAAxC;AACA,WAAO,IAAP;AACD,GAHM,MAGA,IAAIN,OAAO,CAACO,uBAAZ,EAAqC;AAC1CP,IAAAA,OAAO,CAACO,uBAAR,GAD0C,CACP;;AACnC,WAAO,IAAP;AACD,GAHM,MAGA;AACL;AACA,QAAIC,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,qBAA1B,CAAJ,EAAsD;AACpDV,MAAAA,OAAO,GAAGA,OAAO,CAACW,oBAAR,CAA6B,OAA7B,EAAsC,CAAtC,CAAV;;AACA,UAAIX,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACY,qBAAR;AACA,eAAO,IAAP;AACD;AACF;AACF;;AACD,SAAO,KAAP;AACD;;AAEM,SAASC,cAAT,GAA0B;AAC/B,MAAIrB,QAAQ,CAACqB,cAAb,EAA6B;AAC3BrB,IAAAA,QAAQ,CAACqB,cAAT;AACD,GAFD,MAEO,IAAIrB,QAAQ,CAACsB,mBAAb,EAAkC;AACvCtB,IAAAA,QAAQ,CAACsB,mBAAT;AACD,GAFM,MAEA,IAAItB,QAAQ,CAACuB,oBAAb,EAAmC;AACxCvB,IAAAA,QAAQ,CAACuB,oBAAT;AACD,GAFM,MAEA,IAAIvB,QAAQ,CAACwB,oBAAb,EAAmC;AACxCxB,IAAAA,QAAQ,CAACwB,oBAAT;AACD,GAFM,MAEA,IAAIxB,QAAQ,CAACyB,gBAAb,EAA+B;AACpCzB,IAAAA,QAAQ,CAACyB,gBAAT;AACD;AACF;;AAEM,SAASC,sBAAT,CAAgCC,OAAhC,EAAyC;AAC9C,QAAMC,oBAAoB,GAAG,CAC3B,kBAD2B,EAE3B,qBAF2B,EAG3B,wBAH2B,EAI3B,oBAJ2B,CAA7B;AAOAA,EAAAA,oBAAoB,CAACC,OAArB,CAA6B,UAASC,SAAT,EAAoB;AAC/C9B,IAAAA,QAAQ,CAAC+B,gBAAT,CAA0BD,SAA1B,EAAqCH,OAArC;AACD,GAFD;AAIA,SAAO,YAAW;AAChBC,IAAAA,oBAAoB,CAACC,OAArB,CAA6B,UAASC,SAAT,EAAoB;AAC/C9B,MAAAA,QAAQ,CAACgC,mBAAT,CAA6BF,SAA7B,EAAwCH,OAAxC;AACD,KAFD;AAGD,GAJD;AAKD","sourcesContent":["export function getFullscreenElement() {\n  // Ridiculous camel casing confusion ruling the Interwebs.\n  return (\n    document.fullScreenElement ||\n    document.fullscreenElement ||\n    document.webkitFullscreenElement ||\n    document.webkitFullScreenElement ||\n    document.mozFullScreenElement ||\n    document.msFullscreenElement\n  );\n}\n\nexport function enterFullscreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n    return true;\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n    return true;\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n    return true;\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n    return true;\n  } else if (element.webkitRequestFullScreen) {\n    element.webkitRequestFullScreen(); // ALLOW_KEY_BOARD_INPUT makes this function not work in older Safari versions.\n    return true;\n  } else {\n    // Try native fullscreen for video element in Safari on iPhone and older iOS in general.\n    if (navigator.userAgent.match(/(iPad|iPhone|iPod)/i)) {\n      element = element.getElementsByTagName('video')[0];\n      if (element) {\n        element.webkitEnterFullscreen();\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function exitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.webkitExitFullScreen) {\n    document.webkitExitFullScreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  }\n}\n\nexport function notifyFullscreenChange(handler) {\n  const fullscreenEventNames = [\n    'fullscreenchange',\n    'mozfullscreenchange',\n    'webkitfullscreenchange',\n    'MSFullscreenChange'\n  ];\n\n  fullscreenEventNames.forEach(function(eventName) {\n    document.addEventListener(eventName, handler);\n  });\n\n  return function() {\n    fullscreenEventNames.forEach(function(eventName) {\n      document.removeEventListener(eventName, handler);\n    });\n  };\n}\n"],"file":"crossBrowserFullscreen.js"}