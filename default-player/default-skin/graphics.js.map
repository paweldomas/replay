{"version":3,"sources":["../../src/replay/default-player/default-skin/graphics.js"],"names":["graphics","playPauseButton","playingContent","pausedContent","skipButton","content","strings","seconds","timeline","handleContent","trackContent","gotoLiveButton","isAtLiveEdgeContent","isLive","isNotAtLiveEdgeContent","gotoLive","volume","unmutedContent","mutedContent","volumeSliderHandleContent","audioSelector","toggleContent","subtitlesSelector","qualitySelector","pipButton","pipActiveContent","pipInactiveContent","airPlayButton","airPlayActiveContent","airPlayInactiveContent","fullscreenButton","normalContent","fullscreenContent","bufferingIndicator","renderStrategy","playbackMonitor","closeButtonContent","exitButton"],"mappings":";;;;;;;AACA;;AACA;;AAgBA;;AACA;;;;;;;;AAEA,MAAMA,QAAQ,GAAG;AACfC,EAAAA,eAAe,EAAE;AACfC,IAAAA,cAAc,eAAE,oBAAC,mBAAD,OADD;AAEfC,IAAAA,aAAa,eAAE,oBAAC,kBAAD;AAFA,GADF;AAKfC,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,eACL,oBAAC,KAAD,CAAO,QAAP,qBACE,+CACE,oBAAC,uBAAD,OADF,CADF,eAIE,kCAAOC,iBAAQF,UAAR,CAAmBG,OAA1B,CAJF;AAFQ,GALG;AAefC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,EADP;AAERC,IAAAA,YAAY,eAAE;AAFN,GAfK;AAmBfC,EAAAA,cAAc,EAAE;AACdC,IAAAA,mBAAmB,eAAE,kCAAON,iBAAQK,cAAR,CAAuBE,MAA9B,CADP;AAEdC,IAAAA,sBAAsB,eAAE,kCAAOR,iBAAQK,cAAR,CAAuBI,QAA9B;AAFV,GAnBD;AAuBfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,cAAc,eAAE,oBAAC,qBAAD,OADV;AAENC,IAAAA,YAAY,eAAE,oBAAC,qBAAD,OAFR;AAGNC,IAAAA,yBAAyB,EAAE;AAHrB,GAvBO;AA4BfC,EAAAA,aAAa,EAAE;AACbC,IAAAA,aAAa,eAAE,oBAAC,2BAAD;AADF,GA5BA;AA+BfC,EAAAA,iBAAiB,EAAE;AACjBD,IAAAA,aAAa,eAAE,oBAAC,kBAAD;AADE,GA/BJ;AAkCfE,EAAAA,eAAe,EAAE;AACfF,IAAAA,aAAa,eAAE,oBAAC,sBAAD;AADA,GAlCF;AAqCfG,EAAAA,SAAS,EAAE;AACTC,IAAAA,gBAAgB,eAAE,oBAAC,oBAAD,OADT;AAETC,IAAAA,kBAAkB,eAAE,oBAAC,kBAAD;AAFX,GArCI;AAyCfC,EAAAA,aAAa,EAAE;AACbC,IAAAA,oBAAoB,eAAE,oBAAC,qBAAD,OADT;AAEbC,IAAAA,sBAAsB,eAAE,oBAAC,qBAAD;AAFX,GAzCA;AA6CfC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,aAAa,eAAE,oBAAC,sBAAD,OADC;AAEhBC,IAAAA,iBAAiB,eAAE,oBAAC,sBAAD;AAFH,GA7CH;AAiDfC,EAAAA,kBAAkB,EAAE;AAClB5B,IAAAA,OAAO,eAAE,oBAAC,yBAAD,OADS;AAElB6B,IAAAA,cAAc,EAAE;AAFE,GAjDL;AAqDfC,EAAAA,eAAe,EAAE;AACfC,IAAAA,kBAAkB,eAAE,oBAAC,qBAAD;AADL,GArDF;AAwDfC,EAAAA,UAAU,EAAE;AACVhC,IAAAA,OAAO,eAAE,oBAAC,qBAAD;AADC;AAxDG,CAAjB;eA6DeL,Q","sourcesContent":["// @flow\nimport * as React from 'react';\nimport {\n  Play,\n  Pause,\n  RotateCcw,\n  Volume2,\n  VolumeX,\n  MessageSquare,\n  Type,\n  Settings,\n  Copy,\n  Square,\n  Airplay,\n  Maximize,\n  Minimize,\n  XCircle\n} from 'react-feather';\nimport LoadingAnimation from './LoadingAnimation';\nimport strings from '../strings';\n\nconst graphics = {\n  playPauseButton: {\n    playingContent: <Pause />,\n    pausedContent: <Play />\n  },\n  skipButton: {\n    content: (\n      <React.Fragment>\n        <span>\n          <RotateCcw />\n        </span>\n        <span>{strings.skipButton.seconds}</span>\n      </React.Fragment>\n    )\n  },\n  timeline: {\n    handleContent: '',\n    trackContent: <div />\n  },\n  gotoLiveButton: {\n    isAtLiveEdgeContent: <span>{strings.gotoLiveButton.isLive}</span>,\n    isNotAtLiveEdgeContent: <span>{strings.gotoLiveButton.gotoLive}</span>\n  },\n  volume: {\n    unmutedContent: <Volume2 />,\n    mutedContent: <VolumeX />,\n    volumeSliderHandleContent: ''\n  },\n  audioSelector: {\n    toggleContent: <MessageSquare />\n  },\n  subtitlesSelector: {\n    toggleContent: <Type />\n  },\n  qualitySelector: {\n    toggleContent: <Settings />\n  },\n  pipButton: {\n    pipActiveContent: <Square />,\n    pipInactiveContent: <Copy />\n  },\n  airPlayButton: {\n    airPlayActiveContent: <Airplay />,\n    airPlayInactiveContent: <Airplay />\n  },\n  fullscreenButton: {\n    normalContent: <Maximize />,\n    fullscreenContent: <Minimize />\n  },\n  bufferingIndicator: {\n    content: <LoadingAnimation />,\n    renderStrategy: 'always'\n  },\n  playbackMonitor: {\n    closeButtonContent: <XCircle />\n  },\n  exitButton: {\n    content: <XCircle />\n  }\n};\n\nexport default graphics;\n"],"file":"graphics.js"}